// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot-test-ctc1 appBackendStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrcbLogBackupDeliveryStream15F60D74": Object {
      "DependsOn": Array [
        "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-ecs-crcb-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
            },
            "LogStreamName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupSourceStream2B7AD051",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamServiceRole276464BF",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupDeliveryStreamServiceRole276464BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamServiceRole276464BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupSourceStream2B7AD051": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-ecs-crcb-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "CrcbLogBackupSubscriptionFilterRoleDEDB945F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-app-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc1-lifecycle-ps-ctc1-app-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-app-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::946078198632:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FargateAppCrcbBatchEcsLogsGroup0B3736CA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "wcc1-cwl-ps-ctc1-crcb-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-cwl-ps-ctc1-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FargateAppCrcbBatchEcsLogsGroupSubscriptionFilterAF228516": Object {
      "DependsOn": Array [
        "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSourceStream2B7AD051",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppCrcbBatchEcsTask89722423": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "ctc1",
              },
              Object {
                "Name": "REGION",
                "Value": "us-west-2",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
              Object {
                "Name": "APP_API_JWT",
                "Value": "Requieres Bearer Token.",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
            "Arn",
          ],
        },
        "Family": "wcc1-ecs-task-ps-ctc1-crcb-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-task-ps-ctc1-crcb-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskRole044317F2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppCrcbBatchEcsTaskEventsRole294D135C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-task-ps-ctc1-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "FargateAppCrcbBatchEcsTask89722423",
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskRole044317F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-crcb-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-crcb-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskRole044317F2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-crcb-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-crcb-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchMasterfileUploadRuleBE974E6E": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload convertedCheckupResult.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc1-events-ps-ctc1-crcb-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppCrcbBatchsgec2bastionB06A6250",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Ref": "FargateAppCrcbBatchEcsTask89722423",
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppCrcbBatchsgec2bastionB06A6250": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-appBackend/FargateApp/CrcbBatch/sg-ec2-bastion",
        "GroupName": "wcc1-sg-ps-ctc1-crcb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-crcb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppEcsClusterB9DD496E": Object {
      "Properties": Object {
        "ClusterName": "wcc1-ecs-ps-ctc1-cluster-01",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-ps-ctc1-cluster-01",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "FargateAppLemsServiceEcsLogsGroup9927752F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "wcc1-cwl-ps-ctc1-lems-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-cwl-ps-ctc1-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FargateAppLemsServiceEcsLogsGroupSubscriptionFilter2E05B3F5": Object {
      "DependsOn": Array [
        "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSourceStream4CB467E1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSubscriptionFilterRole91241D37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppLemsServiceEcsServiceE47001FE": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "FargateAppEcsClusterB9DD496E",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "EcsContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Fn::ImportValue": "ctc1-wcc1-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServicesgec2bastion11E8D0F3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
              },
              Object {
                "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
              },
            ],
          },
        },
        "ServiceName": "wcc1-ecs-service-ps-ctc1-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-service-ps-ctc1-lems-01",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FargateAppLemsServiceEcsTaskDef879E2E8E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateAppLemsServiceEcsTaskDef879E2E8E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "ctc1",
              },
              Object {
                "Name": "REGION",
                "Value": "us-west-2",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:3000/api/healthcheck || exit 1",
              ],
              "Interval": 30,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
            "Arn",
          ],
        },
        "Family": "wcc1-ecs-task-ps-ctc1-lems-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-task-ps-ctc1-lems-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskRole2D2C6425",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServiceEcsLogsGroup9927752F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB",
        "Roles": Array [
          Object {
            "Ref": "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-lems-ecste-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-lems-ecste-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceEcsTaskRole2D2C6425": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-lems-ecst-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-lems-ecst-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceRunningTaskCountArarmFABD6E49": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-lems-running-task-count-01",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceCpuAlarmD01AE085": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-lems-service-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceMemoryAlarm97960674": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-lems-service-memory-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServicesgec2bastion11E8D0F3": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-appBackend/FargateApp/LemsService/sg-ec2-bastion",
        "GroupName": "wcc1-sg-ps-ctc1-lems-ecs-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-lems-ecs-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppLemsServicesgec2bastionfromctc1wcc1appConnectionLemsALBsgalb8610EE67300026D486B7": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServicesgec2bastion11E8D0F3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "ctc1-wcc1-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FargateAppMubBatchEcsLogsGroupFB01F4E0": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "wcc1-cwl-ps-ctc1-mub-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-cwl-ps-ctc1-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FargateAppMubBatchEcsLogsGroupSubscriptionFilterA917DFF5": Object {
      "DependsOn": Array [
        "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSourceStream185B81A1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSubscriptionFilterRole190AE990",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppMubBatchEcsTask30919817": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "ctc1",
              },
              Object {
                "Name": "REGION",
                "Value": "us-west-2",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
            "Arn",
          ],
        },
        "Family": "wcc1-ecs-task-ps-ctc1-mub-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-task-ps-ctc1-mub-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskRole426A3787",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppMubBatchEcsTaskEventsRole2FACE830": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecs-task-ps-ctc1-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "FargateAppMubBatchEcsTask30919817",
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskRole426A3787",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskEventsRole2FACE830",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskExecutionRole2EED45E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-mub-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-mub-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskRole426A3787": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-mub-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-mub-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchMasterfileUploadRuleC20F6686": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload a masterfile.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "ctc1-wcc1-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc1-events-ps-ctc1-mub-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppMubBatchsgec2bastion738FA0EE",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Ref": "FargateAppMubBatchEcsTask30919817",
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppMubBatchEcsTaskEventsRole2FACE830",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppMubBatchsgec2bastion738FA0EE": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-appBackend/FargateApp/MubBatch/sg-ec2-bastion",
        "GroupName": "wcc1-sg-ps-ctc1-mub-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-mub-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LemsLogBackupDeliveryStream80144FC4": Object {
      "DependsOn": Array [
        "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-ecs-lems-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
            },
            "LogStreamName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupSourceStream4CB467E1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LemsLogBackupDeliveryStreamLogGroup7C59CD90": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleFB1785E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSourceStream4CB467E1": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-ecs-lems-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LemsLogBackupSubscriptionFilterRole91241D37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSubscriptionFilterRole91241D37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupSubscriptionFilterRole91241D37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamADBF156A": Object {
      "DependsOn": Array [
        "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-ecs-mub-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
            },
            "LogStreamName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupSourceStream185B81A1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamServiceRole6D9BF515",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "MubLogBackupDeliveryStreamLogGroupD9F8625A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamS3DestinationRole647E8A68": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupDeliveryStreamLogGroupD9F8625A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamServiceRole6D9BF515": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamServiceRole6D9BF515",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupSourceStream185B81A1": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-ecs-mub-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "MubLogBackupSubscriptionFilterRole190AE990": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSubscriptionFilterRole190AE990",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupSubscriptionFilterRole190AE990",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-ctc1 appConnectionStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "LemsALBsgalb360F0F1A",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
      },
      "Value": Object {
        "Ref": "LemsALBTargetGroup1694B0AFD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FrontAppDistributionCFDistribution3D02667E": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "front1.ci-si1.com",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Headers": Array [
                  "Authorization",
                ],
                "QueryString": true,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "DefaultTTL": 0,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "MaxTTL": 0,
            "MinTTL": 0,
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": false,
          "Logging": Object {
            "Bucket": "wcc-s3-ps-ps1-cloudfrontlog-01.s3.us-west-2.amazonaws.com",
            "IncludeCookies": true,
            "Prefix": "accesslog/",
          },
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "webBuckets3Bucket10AEEE1D",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "FrontAppOai146E590D",
                      },
                    ],
                  ],
                },
              },
            },
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 443,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "back1.ci-si1.com",
              "Id": "origin2",
              "OriginCustomHeaders": Array [
                Object {
                  "HeaderName": "FRONT-HEADER",
                  "HeaderValue": "f286ca3b-065f-56e9-8b36-3267df61a3a9",
                },
              ],
            },
          ],
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": Object {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:894842485621:certificate/ca0925bb-7702-4ac0-889e-193c862908e2",
            "SslSupportMethod": "sni-only",
          },
          "WebACLId": "arn:aws:wafv2:us-east-1:894842485621:global/webacl/wcc1-waf-ps-ctc1-waf-01/8d593590-8969-4941-ba28-a063bae17861",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-cloudfront-ps-ctc1-api-webhosting-01",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FrontAppOai146E590D": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "s3 web access.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "LemsALBALBRuleWithHeader52E92326": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LemsALBTargetGroup1694B0AFD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "http-header",
            "HttpHeaderConfig": Object {
              "HttpHeaderName": "FRONT-HEADER",
              "Values": Array [
                "f286ca3b-065f-56e9-8b36-3267df61a3a9",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "LemsALBAlbAlbListener3E2CC054",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LemsALBAlb29929891": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": "wcc-s3-ps-ps1-elblog-01",
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "accesslog",
          },
        ],
        "Name": "wcc1-alb-ps-ctc1-lems-01",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LemsALBsgalb360F0F1A",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
          },
          Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-alb-ps-ctc1-lems-01",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LemsALBAlbAlbListener3E2CC054": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:us-west-2:894842485621:certificate/f7172697-4278-4e83-958e-12d366c0b3c7",
          },
        ],
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "StatusCode": "403",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LemsALBAlb29929891",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LemsALBTargetGroup1694B0AFD": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/healthcheck",
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LemsALBsgalb360F0F1A": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-appConnection/LemsALB/sg-alb",
        "GroupName": "wcc1-sg-ps-ctc1-alb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-alb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryApp8441B565": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsApiCanaryAppServiceRole17107E2B",
            "Arn",
          ],
        },
        "Name": "wcc1-ps-ctc1-api",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "front1.ci-si1.com",
            "TARGETPATH": "/api/healthcheck",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsApiCanaryAppSecurityGroupFD5446AC",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsApiCanaryAppSecurityGroupFD5446AC": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary ctc1wcc1appConnectionSyntheticsApiCanaryAppB05B4F0B",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryAppServiceRole17107E2B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:us-west-2:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsApiappCanalyPolicyToS3FBE92555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsApiappCanalyPolicyToS3FBE92555",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsApiCanaryAppServiceRole17107E2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsApicanaryFailed181B325A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-api-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsApiCanaryApp8441B565",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticsFrontCanaryAppB8A2B56A": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
            "Arn",
          ],
        },
        "Name": "wcc1-ps-ctc1-front",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "front1.ci-si1.com",
            "TARGETPATH": "/",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary ctc1wcc1appConnectionSyntheticsFrontCanaryApp89674D3F",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsFrontCanaryAppServiceRole2DB60CCC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:us-west-2:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsFrontappCanalyPolicyToS3C7BAAD91": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsFrontappCanalyPolicyToS3C7BAAD91",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsFrontcanaryFailed0CA4F644": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-front-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsFrontCanaryAppB8A2B56A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canaryArtifacts3BucketC3B44A8D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-canary-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc1-s3-ps-ctc1-canary-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-canary-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "canaryArtifacts3BucketPolicy7BC8766C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "canaryArtifacts3BucketC3B44A8D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "canaryArtifacts3BucketC3B44A8D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "canaryArtifacts3BucketC3B44A8D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "webBuckets3Bucket10AEEE1D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-web-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc1-s3-ps-ctc1-web-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-web-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "webBuckets3BucketPolicy2B9A4E37": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "webBuckets3Bucket10AEEE1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "webBuckets3Bucket10AEEE1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "webBuckets3Bucket10AEEE1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "FrontAppOai146E590D",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "webBuckets3Bucket10AEEE1D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-ctc1 appStatefullStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryCrcbEcrRepository4A181266",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryLemsEcrRepository6F6AB26B",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryMubEcrRepository0646994A",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
      },
      "Value": Object {
        "Ref": "AuroraMysqldbSecret3EE8ABE5",
      },
    },
    "ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
      },
      "Value": Object {
        "Ref": "EcrRepositoryCrcbEcrRepository4A181266",
      },
    },
    "ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
      },
      "Value": Object {
        "Ref": "EcrRepositoryLemsEcrRepository6F6AB26B",
      },
    },
    "ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
      },
      "Value": Object {
        "Ref": "EcrRepositoryMubEcrRepository0646994A",
      },
    },
    "ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
      },
      "Value": Object {
        "Ref": "s3executedcheckupresultfiless3Bucket87791383",
      },
    },
    "ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
      },
      "Value": Object {
        "Ref": "s3masterfiless3BucketA965B49C",
      },
    },
    "ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
      },
      "Value": Object {
        "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMysqlCpuUtilizationF9A2F6FC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-rds-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlMemoryUtilizationFFF9E1BC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:us-west-2:894842485621:sns-yamamoto",
        ],
        "AlarmName": "wcc1-alarm-ps-ctc1-rds-memory-utilization-01",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 644245094.4,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlauditLogSubscriptionFilter20D58C8F": Object {
      "DependsOn": Array [
        "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSourceStream0F2E9FA1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSubscriptionFilterRole4CF1AC4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "e534638c7f49fd12ed0ea05ee40f20fd27f06ad1ef8ef2e4756711aa53311d6a.zip",
        },
        "Description": "Copy RDS snapshots cross-region.",
        "Environment": Object {
          "Variables": Object {
            "DESTINATION_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc1-lambda-ps-ctc1-copy-snapshot-01",
        "Handler": "copy-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-lambda-ps-ctc1-delete-snapshot-01",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-lambda-ps-ctc1-delete-snapshot-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DescribeDBSnapshots",
                "rds:CopyDBSnapshot",
                "rds:CopyDBClusterSnapshot",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowCopyRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881": Object {
      "Properties": Object {
        "Description": "Delete RDS snapshots rule.",
        "Name": "wcc1-event-ps-ctc1-delete-snapshot-01",
        "ScheduleExpression": "cron(0 15 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRuleAllowEventRulectc1wcc1appStatefullAuroraMysqlcopySnapshotDeleteSnapshotFunc9BBDF8DA367BDA10": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "e534638c7f49fd12ed0ea05ee40f20fd27f06ad1ef8ef2e4756711aa53311d6a.zip",
        },
        "Description": "Delete RDS snapshots.",
        "Environment": Object {
          "Variables": Object {
            "DELETE_DAYS": "2",
            "RDS_CLUSTER_NAME": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
            "TARGET_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc1-lambda-ps-ctc1-delete-snapshot-01",
        "Handler": "delete-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DeleteDBClusterSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBClusterSnapshots",
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowDeleteRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC": Object {
      "Properties": Object {
        "Description": "Event on create RDS backup.",
        "EventPattern": Object {
          "detail": Object {
            "EventID": Array [
              "RDS-EVENT-0075",
              "RDS-EVENT-0169",
            ],
            "SourceIdentifier": Array [
              Object {
                "prefix": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "rds:",
                      Object {
                        "Ref": "AuroraMysqlrdsaurora1AD58F64",
                      },
                    ],
                  ],
                },
              },
            ],
          },
          "detail-type": Array [
            "RDS DB Cluster Snapshot Event",
          ],
          "source": Array [
            "aws.rds",
          ],
        },
        "Name": "wcc1-event-ps-ctc1-copy-snapshot-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupAllowEventRulectc1wcc1appStatefullAuroraMysqlcopySnapshotCopySnapshotFunc9BCCF2DDFC538947": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqldbSecret3EE8ABE5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "RDS AuroraMysql user password.",
        "GenerateSecretString": Object {
          "ExcludeCharacters": "\\"%+~\`#$&()|[]{}:;<>?!'/@)*-\\\\",
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\\"username\\":\\"auroramysql\\"}",
        },
        "Name": "wcc1-sm-ps-ctc1-aurora-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sm-ps-ctc1-aurora-01",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqldbSecretAttachment17C2F2B2": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraMysqldbSecret3EE8ABE5",
        },
        "TargetId": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMysqlerrorLogSubscriptionFilterDDECEAB5": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSourceStream731398D4",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSubscriptionFilterRole581B648A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlgeneralLogSubscriptionFilterA822B9D4": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSourceStreamC7156042",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSubscriptionFilterRoleE58546A9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlrdsaurora1AD58F64": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BackupRetentionPeriod": 2,
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "wcc1-aurora-ps-ctc1-cluster-01",
        "DBClusterParameterGroupName": Object {
          "Ref": "AuroraMysqlrdsparameterGrpC9897E1B",
        },
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "DatabaseName": "rsltproc",
        "DeletionProtection": false,
        "EnableCloudwatchLogsExports": Array [
          "error",
          "general",
          "slowquery",
          "audit",
        ],
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.02.1",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 3306,
        "PreferredBackupWindow": "16:00-16:30",
        "PreferredMaintenanceWindow": "Sat:15:00-Sat:15:30",
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-aurora-ps-ctc1-cluster-01",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraMysqlsgrdsaurora89D6CFEC",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqlrdsauroraInstance1FB2FA22C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc1-aurora-ps-ctc1-instance-01-1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqlrdsauroraLogRetentionaudit240213FA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraMonitoringRole062D4CDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlrdsparameterGrpC9897E1B": Object {
      "Properties": Object {
        "Description": "wcc1-parametergrp-ps-ctc1-aurora-01",
        "Family": "aurora-mysql8.0",
        "Parameters": Object {
          "character_set_client": "utf8mb4",
          "character_set_connection": "utf8mb4",
          "character_set_database": "utf8mb4",
          "character_set_results": "utf8mb4",
          "character_set_server": "utf8mb4",
          "collation_connection": "utf8mb4_bin",
          "collation_server": "utf8mb4_bin",
          "general_log": "1",
          "server_audit_logging": "1",
          "slow_query_log": "1",
          "time_zone": "Asia/Tokyo",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-parametergrp-ps-ctc1-aurora-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraMysqlrdssubnetgrpD5955B6A": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "wcc1-subnetgrp-ps-ctc1-private-01",
        "DBSubnetGroupName": "wcc1-subnetgrp-ps-ctc1-private-01",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
          },
          Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-subnetgrp-ps-ctc1-private-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMysqlsgrdsaurora89D6CFEC": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-appStatefull/AuroraMysql/sg-rds-aurora",
        "GroupName": "wcc1-sg-ps-ctc1-aurora-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.200.1.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
          Object {
            "CidrIp": "10.200.101.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-aurora-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraMysqlslowqueryLogSubscriptionFilter0E58A533": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSourceStreamE5A932D7",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
  response_status = \\"SUCCESS\\"
  error_message = \\"\\"
  try:
    props = event[\\"ResourceProperties\\"]
    bucket = props[\\"BucketName\\"]
    notification_configuration = props[\\"NotificationConfiguration\\"]
    request_type = event[\\"RequestType\\"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception(\\"Failed to put bucket notification configuration\\")
    response_status = \\"FAILED\\"
    error_message = f\\"Error: {str(e)}. \\"
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      \\"Status\\": response_status,
      \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
      \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
      \\"StackId\\": event[\\"StackId\\"],
      \\"RequestId\\": event[\\"RequestId\\"],
      \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
      \\"NoEcho\\": False,
    }
  ).encode(\\"utf-8\\")
  headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode(\\"utf-8\\"))
    print(\\"Status code: \\" + response.reason)
  except Exception as e:
      print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-rds-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc1-lifecycle-ps-ctc1-rds-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-rds-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::946078198632:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcrRepositoryCrcbEcrRepository4A181266": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc1-ecr-ps-ctc1-crcb-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecr-ps-ctc1-crcb-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "EcrRepositoryLemsEcrRepository6F6AB26B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc1-ecr-ps-ctc1-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecr-ps-ctc1-lems-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "EcrRepositoryMubEcrRepository0646994A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc1-ecr-ps-ctc1-mub-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ecr-ps-ctc1-mub-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "e45ee2082d227db1b6f0292696ce5ce2b061c105d15efb341925ca040d1feb68.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStream988E743F": Object {
      "DependsOn": Array [
        "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-rds-audit-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
            },
            "LogStreamName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-audit/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupSourceStream0F2E9FA1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "auditLogBackupDeliveryStreamLogGroup380ADE01": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamS3DestinationRole38051E8B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupDeliveryStreamLogGroup380ADE01",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStreamServiceRoleA3872BE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupSourceStream0F2E9FA1": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-rds-audit-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "auditLogBackupSubscriptionFilterRole4CF1AC4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSubscriptionFilterRole4CF1AC4C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupSubscriptionFilterRole4CF1AC4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStream94D26D09": Object {
      "DependsOn": Array [
        "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-rds-error-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
            },
            "LogStreamName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-error/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupSourceStream731398D4",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-error-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "errorLogBackupDeliveryStreamLogGroup9EAB4ED0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSourceStream731398D4": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-rds-error-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "errorLogBackupSubscriptionFilterRole581B648A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSubscriptionFilterRole581B648A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupSubscriptionFilterRole581B648A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStream785A07E0": Object {
      "DependsOn": Array [
        "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-rds-general-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
            },
            "LogStreamName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-general/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamS3DestinationRole39241273",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupSourceStreamC7156042",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamServiceRoleF612D538",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-general-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "generalLogBackupDeliveryStreamLogGroupF29A1721": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamS3DestinationRole39241273": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupDeliveryStreamLogGroupF29A1721",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamS3DestinationRole39241273",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamServiceRoleF612D538",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleF612D538": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupSourceStreamC7156042": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-rds-general-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSubscriptionFilterRoleE58546A9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupSubscriptionFilterRoleE58546A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupSubscriptionFilterRoleE58546A9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "s3executedcheckupresultfiless3Bucket87791383": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-executed-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc1-s3-ps-ctc1-executed-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-executed-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "s3executedcheckupresultfiless3BucketPolicy3687CC05": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3executedcheckupresultfiless3Bucket87791383",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3executedcheckupresultfiless3Bucket87791383",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3executedcheckupresultfiless3Bucket87791383",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3masterfiless3BucketA965B49C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-master-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc1-s3-ps-ctc1-master-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-master-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "s3masterfiless3BucketNotificationsD17B3C7A": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3masterfiless3BucketPolicy7398B30D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3masterfiless3BucketA965B49C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3masterfiless3BucketA965B49C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3uploadedcheckupresultfiless3BucketEB10AA1D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-uploaded-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc1-s3-ps-ctc1-uploaded-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-uploaded-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "s3uploadedcheckupresultfiless3BucketNotifications6E88FE28": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3uploadedcheckupresultfiless3BucketPolicy8A996C24": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "slowqueryLogBackupDeliveryStreamA6BE1255": Object {
      "DependsOn": Array [
        "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc1-deliveryStream-ps-ctc1-rds-slowquery-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
            },
            "LogStreamName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-slowquery/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupSourceStreamE5A932D7",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "slowqueryLogBackupDeliveryStreamLogGroup71573CA1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-deliveryStream-ps-ctc1-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupSourceStreamE5A932D7": Object {
      "Properties": Object {
        "Name": "wcc1-stream-ps-ctc1-rds-slowquery-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-stream-ps-ctc1-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-west-2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-ctc1 networkStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefPsVpcB3B0C151B33DF0C2": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
      },
      "Value": Object {
        "Ref": "PsVpcB3B0C151",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
      },
    },
    "ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570": Object {
      "Export": Object {
        "Name": "ctc1-wcc1-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
      },
      "Value": Object {
        "Ref": "S3LogBuckets3Bucket9252A6FD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PsVpcB3B0C151": Object {
      "Properties": Object {
        "CidrBlock": "10.200.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-vpc-ps-ctc1-apne1-01",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "PsVpcIgw5C685DB3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-igw-ps-ctc1-01",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "PsVpcIgwAtt70BBF2A3": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "PsVpcPrivateSubnet0PrivateSubnetDefaultRoute4966EBAE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet0NatGateway1C7BC65D",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet0PrivateSubnetE40A98D3": Object {
      "Properties": Object {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "10.200.1.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-subnet-ps-ctc1-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-rtb-ps-ctc1-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTableAssociationA4BCDB43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37": Object {
      "Properties": Object {
        "AvailabilityZone": "us-west-2b",
        "CidrBlock": "10.200.101.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-subnet-ps-ctc1-private-b-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet1PrivateSubnetDefaultRoute8B1574DC": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet1NatGateway449156E1",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-rtb-ps-ctc1-private-b-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTableAssociationB5686E53": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0Eip29037005": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-eip-ps-ctc1-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet0NatGateway1C7BC65D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet0Eip29037005",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-nat-ps-ctc1-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet0PublicSubnet2D08C832": Object {
      "Properties": Object {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "10.200.0.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-subnet-ps-ctc1-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet0PublicSubnetDefaultRouteA06EF3AF": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableAssociationB5186F48": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-rtb-ps-ctc1-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1EipB03695F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-eip-ps-ctc1-b-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet1NatGateway449156E1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet1EipB03695F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-nat-ps-ctc1-b-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet1PublicSubnetDefaultRouteE5FC4C06": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet1PublicSubnetF4FCB026": Object {
      "Properties": Object {
        "AvailabilityZone": "us-west-2b",
        "CidrBlock": "10.200.100.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-subnet-ps-ctc1-public-b-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-rtb-ps-ctc1-public-b-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTableAssociation435B1413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcS3GatewayEp039F2B29": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
          },
          Object {
            "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "PsVpcvpcFlowLog44076D7B": Object {
      "Properties": Object {
        "LogDestination": "arn:aws:s3:::wcc-s3-ps-ps1-vpcflowlog-01/wcc1-s3-ps-ctc1-log-vpcflowlog-01/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": Object {
          "Ref": "PsVpcB3B0C151",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-log-vpcflowlog-01",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "S3LogBuckets3Bucket9252A6FD": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc1-s3-ps-ctc1-s3-accesslog-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc1-lifecycle-ps-ctc1-accesslog-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-s3-ps-ctc1-s3-accesslog-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "S3LogBuckets3BucketPolicyDB375CE9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "S3LogBuckets3Bucket9252A6FD",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "S3LogBuckets3Bucket9252A6FD",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "S3LogBuckets3Bucket9252A6FD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-source-01",
                  "arn:aws:iam::946078198632:role/wcc-role-ps-ps1-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "S3LogBuckets3Bucket9252A6FD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::946078198632:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-ctc1 opsStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "ec2bastionAAEED1EE": Object {
      "DependsOn": Array [
        "roleec2bastionFAACD82E",
      ],
      "Properties": Object {
        "AvailabilityZone": "us-west-2a",
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "Iops": 3000,
              "VolumeSize": 8,
              "VolumeType": "gp3",
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "ec2bastionInstanceProfile4EB81733",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "sgec2bastionE0536592",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-ec2-ps-ctc1-bastion-01",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
hostnamectl set-hostname wcc1-ec2-ps-ctc1-bastion-01
echo \\"preserve_hostname: true\\" >> /etc/cloud/cloud.cfg
timedatectl set-timezone Asia/Tokyo
yum update -y",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ec2bastionInstanceProfile4EB81733": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "roleec2bastionFAACD82E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "roleec2bastionFAACD82E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "bastion ec2 role",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "RoleName": "wcc1-role-ps-ctc1-bastion-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-role-ps-ctc1-bastion-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sgec2bastionE0536592": Object {
      "Properties": Object {
        "GroupDescription": "ctc1-wcc1-ops/sg-ec2-bastion",
        "GroupName": "wcc1-sg-ps-ctc1-bastion-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-ctc1",
          },
          Object {
            "Key": "Name",
            "Value": "wcc1-sg-ps-ctc1-bastion-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ctc1-wcc1-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-dev appBackendStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrcbLogBackupDeliveryStream15F60D74": Object {
      "DependsOn": Array [
        "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-ecs-crcb-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
            },
            "LogStreamName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupSourceStream2B7AD051",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamServiceRole276464BF",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupDeliveryStreamServiceRole276464BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamServiceRole276464BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupSourceStream2B7AD051": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-ecs-crcb-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "CrcbLogBackupSubscriptionFilterRoleDEDB945F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-app-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-dev-app-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-app-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FargateAppCrcbBatchEcsLogsGroup0B3736CA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-dev-crcb-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-dev-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppCrcbBatchEcsLogsGroupSubscriptionFilterAF228516": Object {
      "DependsOn": Array [
        "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSourceStream2B7AD051",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppCrcbBatchEcsTask89722423": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "dev",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
              Object {
                "Name": "APP_API_JWT",
                "Value": "Requieres Bearer Token.",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-dev-crcb-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-dev-crcb-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskRole044317F2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppCrcbBatchEcsTaskEventsRole294D135C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-dev-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskRole044317F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-dev-crcb-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-crcb-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskRole044317F2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-dev-crcb-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-crcb-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchMasterfileUploadRuleBE974E6E": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload convertedCheckupResult.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-dev-crcb-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppCrcbBatchsgec2bastionB06A6250",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppCrcbBatchsgec2bastionB06A6250": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-appBackend/FargateApp/CrcbBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-dev-crcb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-crcb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppEcsClusterB9DD496E": Object {
      "Properties": Object {
        "ClusterName": "wcc-ecs-ps-dev-cluster-01",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-ps-dev-cluster-01",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "FargateAppLemsServiceEcsLogsGroup9927752F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-dev-lems-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-dev-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppLemsServiceEcsLogsGroupSubscriptionFilter2E05B3F5": Object {
      "DependsOn": Array [
        "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSourceStream4CB467E1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSubscriptionFilterRole91241D37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppLemsServiceEcsServiceE47001FE": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "FargateAppEcsClusterB9DD496E",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "EcsContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Fn::ImportValue": "dev-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServicesgec2bastion11E8D0F3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
              },
              Object {
                "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
              },
            ],
          },
        },
        "ServiceName": "wcc-ecs-service-ps-dev-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-service-ps-dev-lems-01",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FargateAppLemsServiceEcsTaskDef879E2E8E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateAppLemsServiceEcsTaskDef879E2E8E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "dev",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:3000/api/healthcheck || exit 1",
              ],
              "Interval": 30,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-dev-lems-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-dev-lems-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskRole2D2C6425",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServiceEcsLogsGroup9927752F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB",
        "Roles": Array [
          Object {
            "Ref": "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-dev-lems-ecste-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-lems-ecste-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceEcsTaskRole2D2C6425": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-dev-lems-ecst-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-lems-ecst-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceRunningTaskCountArarmFABD6E49": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-lems-running-task-count-01",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceCpuAlarmD01AE085": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-lems-service-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceMemoryAlarm97960674": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-lems-service-memory-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServicesgec2bastion11E8D0F3": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-appBackend/FargateApp/LemsService/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-dev-lems-ecs-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-lems-ecs-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppLemsServicesgec2bastionfromdevwccappConnectionLemsALBsgalb15E92D8A30002BC2FB26": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServicesgec2bastion11E8D0F3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "dev-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FargateAppMubBatchEcsLogsGroupFB01F4E0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-dev-mub-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-dev-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppMubBatchEcsLogsGroupSubscriptionFilterA917DFF5": Object {
      "DependsOn": Array [
        "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSourceStream185B81A1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSubscriptionFilterRole190AE990",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppMubBatchEcsTask30919817": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "dev",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-dev-mub-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-dev-mub-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskRole426A3787",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppMubBatchEcsTaskEventsRole2FACE830": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-dev-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskRole426A3787",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskEventsRole2FACE830",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskExecutionRole2EED45E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-dev-mub-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-mub-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskRole426A3787": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-dev-mub-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-mub-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchMasterfileUploadRuleC20F6686": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload a masterfile.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "dev-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-dev-mub-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppMubBatchsgec2bastion738FA0EE",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppMubBatchEcsTaskEventsRole2FACE830",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppMubBatchsgec2bastion738FA0EE": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-appBackend/FargateApp/MubBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-dev-mub-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-mub-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LemsLogBackupDeliveryStream80144FC4": Object {
      "DependsOn": Array [
        "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-ecs-lems-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
            },
            "LogStreamName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupSourceStream4CB467E1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LemsLogBackupDeliveryStreamLogGroup7C59CD90": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleFB1785E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSourceStream4CB467E1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-ecs-lems-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LemsLogBackupSubscriptionFilterRole91241D37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSubscriptionFilterRole91241D37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupSubscriptionFilterRole91241D37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamADBF156A": Object {
      "DependsOn": Array [
        "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-ecs-mub-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
            },
            "LogStreamName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupSourceStream185B81A1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamServiceRole6D9BF515",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "MubLogBackupDeliveryStreamLogGroupD9F8625A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamS3DestinationRole647E8A68": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupDeliveryStreamLogGroupD9F8625A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamServiceRole6D9BF515": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamServiceRole6D9BF515",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupSourceStream185B81A1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-ecs-mub-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "MubLogBackupSubscriptionFilterRole190AE990": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSubscriptionFilterRole190AE990",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupSubscriptionFilterRole190AE990",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-dev appConnectionStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD": Object {
      "Export": Object {
        "Name": "dev-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "LemsALBsgalb360F0F1A",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE": Object {
      "Export": Object {
        "Name": "dev-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
      },
      "Value": Object {
        "Ref": "LemsALBTargetGroup1694B0AFD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FrontAppDistributionCFDistribution3D02667E": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "ps-dev.wellcoms.jp",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Headers": Array [
                  "Authorization",
                ],
                "QueryString": true,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "DefaultTTL": 0,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "MaxTTL": 0,
            "MinTTL": 0,
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": false,
          "Logging": Object {
            "Bucket": "wcc-s3-ps-dev-cloudfrontlog-01.s3.ap-northeast-1.amazonaws.com",
            "IncludeCookies": true,
            "Prefix": "accesslog/",
          },
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "webBuckets3Bucket10AEEE1D",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "FrontAppOai146E590D",
                      },
                    ],
                  ],
                },
              },
            },
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 443,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "ps-dev-org.wellcoms.jp",
              "Id": "origin2",
              "OriginCustomHeaders": Array [
                Object {
                  "HeaderName": "FRONT-HEADER",
                  "HeaderValue": "9af42856-455b-5b4c-b4e4-d4523931ec9f",
                },
              ],
            },
          ],
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": Object {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:048262783971:certificate/219c53ca-8b1f-4d9d-af88-b44b77c09dd9",
            "SslSupportMethod": "sni-only",
          },
          "WebACLId": "arn:aws:wafv2:us-east-1:048262783971:global/webacl/wcc-waf-ps-dev-cloudfront-01/43bd56b5-6a69-43ac-a4ec-f3089e132c9c",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cloudfront-ps-dev-api-webhosting-01",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FrontAppOai146E590D": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "s3 web access.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "LemsALBALBRuleWithHeader52E92326": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LemsALBTargetGroup1694B0AFD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "http-header",
            "HttpHeaderConfig": Object {
              "HttpHeaderName": "FRONT-HEADER",
              "Values": Array [
                "9af42856-455b-5b4c-b4e4-d4523931ec9f",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "LemsALBAlbAlbListener3E2CC054",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LemsALBAlb29929891": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": "wcc-s3-ps-dev-elblog-01",
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "accesslog",
          },
        ],
        "Name": "wcc-alb-ps-dev-lems-01",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LemsALBsgalb360F0F1A",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
          },
          Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-alb-ps-dev-lems-01",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LemsALBAlbAlbListener3E2CC054": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:ap-northeast-1:048262783971:certificate/124b14cc-a7f5-4519-b22c-36cefd770587",
          },
        ],
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "StatusCode": "403",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LemsALBAlb29929891",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LemsALBTargetGroup1694B0AFD": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/healthcheck",
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LemsALBsgalb360F0F1A": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-appConnection/LemsALB/sg-alb",
        "GroupName": "wcc-sg-ps-dev-alb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-alb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryApp8441B565": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsApiCanaryAppServiceRole17107E2B",
            "Arn",
          ],
        },
        "Name": "wcc-ps-dev-api",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-dev.wellcoms.jp",
            "TARGETPATH": "/api/healthcheck",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsApiCanaryAppSecurityGroupFD5446AC",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsApiCanaryAppSecurityGroupFD5446AC": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary devwccappConnectionSyntheticsApiCanaryApp2E0E6816",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryAppServiceRole17107E2B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsApiappCanalyPolicyToS3FBE92555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsApiappCanalyPolicyToS3FBE92555",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsApiCanaryAppServiceRole17107E2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsApicanaryFailed181B325A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-api-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsApiCanaryApp8441B565",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticsFrontCanaryAppB8A2B56A": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
            "Arn",
          ],
        },
        "Name": "wcc-ps-dev-front",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-dev.wellcoms.jp",
            "TARGETPATH": "/",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary devwccappConnectionSyntheticsFrontCanaryApp245C61C1",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsFrontCanaryAppServiceRole2DB60CCC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsFrontappCanalyPolicyToS3C7BAAD91": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsFrontappCanalyPolicyToS3C7BAAD91",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsFrontcanaryFailed0CA4F644": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-front-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsFrontCanaryAppB8A2B56A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canaryArtifacts3BucketC3B44A8D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-canary-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-dev-canary-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-canary-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "canaryArtifacts3BucketPolicy7BC8766C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "canaryArtifacts3BucketC3B44A8D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "canaryArtifacts3BucketC3B44A8D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "canaryArtifacts3BucketC3B44A8D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "webBuckets3Bucket10AEEE1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-web-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-dev-web-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-web-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "webBuckets3BucketPolicy2B9A4E37": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "webBuckets3Bucket10AEEE1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "webBuckets3Bucket10AEEE1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "webBuckets3Bucket10AEEE1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "FrontAppOai146E590D",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "webBuckets3Bucket10AEEE1D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-dev appStatefullStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryCrcbEcrRepository4A181266",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryLemsEcrRepository6F6AB26B",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryMubEcrRepository0646994A",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
      },
      "Value": Object {
        "Ref": "AuroraMysqldbSecret3EE8ABE5",
      },
    },
    "ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
      },
      "Value": Object {
        "Ref": "EcrRepositoryCrcbEcrRepository4A181266",
      },
    },
    "ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
      },
      "Value": Object {
        "Ref": "EcrRepositoryLemsEcrRepository6F6AB26B",
      },
    },
    "ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
      },
      "Value": Object {
        "Ref": "EcrRepositoryMubEcrRepository0646994A",
      },
    },
    "ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
      },
      "Value": Object {
        "Ref": "s3executedcheckupresultfiless3Bucket87791383",
      },
    },
    "ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
      },
      "Value": Object {
        "Ref": "s3masterfiless3BucketA965B49C",
      },
    },
    "ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559": Object {
      "Export": Object {
        "Name": "dev-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
      },
      "Value": Object {
        "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMysqlCpuUtilizationF9A2F6FC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-rds-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlMemoryUtilizationFFF9E1BC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-dev-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-dev-rds-memory-utilization-01",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 644245094.4,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlauditLogSubscriptionFilter20D58C8F": Object {
      "DependsOn": Array [
        "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSourceStream0F2E9FA1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSubscriptionFilterRole4CF1AC4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Copy RDS snapshots cross-region.",
        "Environment": Object {
          "Variables": Object {
            "DESTINATION_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-dev-copy-snapshot-01",
        "Handler": "copy-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-dev-delete-snapshot-01",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-dev-delete-snapshot-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DescribeDBSnapshots",
                "rds:CopyDBSnapshot",
                "rds:CopyDBClusterSnapshot",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowCopyRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881": Object {
      "Properties": Object {
        "Description": "Delete RDS snapshots rule.",
        "Name": "wcc-event-ps-dev-delete-snapshot-01",
        "ScheduleExpression": "cron(0 15 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRuleAllowEventRuledevwccappStatefullAuroraMysqlcopySnapshotDeleteSnapshotFuncA457F8C27BE50A81": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Delete RDS snapshots.",
        "Environment": Object {
          "Variables": Object {
            "DELETE_DAYS": "7",
            "RDS_CLUSTER_NAME": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
            "TARGET_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-dev-delete-snapshot-01",
        "Handler": "delete-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DeleteDBClusterSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBClusterSnapshots",
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowDeleteRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC": Object {
      "Properties": Object {
        "Description": "Event on create RDS backup.",
        "EventPattern": Object {
          "detail": Object {
            "EventID": Array [
              "RDS-EVENT-0075",
              "RDS-EVENT-0169",
            ],
            "SourceIdentifier": Array [
              Object {
                "prefix": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "rds:",
                      Object {
                        "Ref": "AuroraMysqlrdsaurora1AD58F64",
                      },
                    ],
                  ],
                },
              },
            ],
          },
          "detail-type": Array [
            "RDS DB Cluster Snapshot Event",
          ],
          "source": Array [
            "aws.rds",
          ],
        },
        "Name": "wcc-event-ps-dev-copy-snapshot-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupAllowEventRuledevwccappStatefullAuroraMysqlcopySnapshotCopySnapshotFuncBB8416702573DD99": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqldbSecret3EE8ABE5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "RDS AuroraMysql user password.",
        "GenerateSecretString": Object {
          "ExcludeCharacters": "\\"%+~\`#$&()|[]{}:;<>?!'/@)*-\\\\",
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\\"username\\":\\"auroramysql\\"}",
        },
        "Name": "wcc-sm-ps-dev-aurora-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sm-ps-dev-aurora-01",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqldbSecretAttachment17C2F2B2": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraMysqldbSecret3EE8ABE5",
        },
        "TargetId": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMysqlerrorLogSubscriptionFilterDDECEAB5": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSourceStream731398D4",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSubscriptionFilterRole581B648A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlgeneralLogSubscriptionFilterA822B9D4": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSourceStreamC7156042",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSubscriptionFilterRoleE58546A9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlrdsaurora1AD58F64": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "wcc-aurora-ps-dev-cluster-01",
        "DBClusterParameterGroupName": Object {
          "Ref": "AuroraMysqlrdsparameterGrpC9897E1B",
        },
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "DatabaseName": "rsltproc",
        "DeletionProtection": true,
        "EnableCloudwatchLogsExports": Array [
          "error",
          "general",
          "slowquery",
          "audit",
        ],
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.02.1",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 3306,
        "PreferredBackupWindow": "16:00-16:30",
        "PreferredMaintenanceWindow": "Sat:15:00-Sat:15:30",
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-aurora-ps-dev-cluster-01",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraMysqlsgrdsaurora89D6CFEC",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance1FB2FA22C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-dev-instance-01-1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance217DBA6B3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-dev-instance-01-2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraLogRetentionaudit240213FA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraMonitoringRole062D4CDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlrdsparameterGrpC9897E1B": Object {
      "Properties": Object {
        "Description": "wcc-parametergrp-ps-dev-aurora-01",
        "Family": "aurora-mysql8.0",
        "Parameters": Object {
          "character_set_client": "utf8mb4",
          "character_set_connection": "utf8mb4",
          "character_set_database": "utf8mb4",
          "character_set_results": "utf8mb4",
          "character_set_server": "utf8mb4",
          "collation_connection": "utf8mb4_bin",
          "collation_server": "utf8mb4_bin",
          "general_log": "1",
          "server_audit_events": "CONNECT,QUERY,TABLE",
          "server_audit_logging": "1",
          "server_audit_logs_upload": "1",
          "slow_query_log": "1",
          "time_zone": "Asia/Tokyo",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-parametergrp-ps-dev-aurora-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraMysqlrdssubnetgrpD5955B6A": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "wcc-subnetgrp-ps-dev-private-01",
        "DBSubnetGroupName": "wcc-subnetgrp-ps-dev-private-01",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
          },
          Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnetgrp-ps-dev-private-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMysqlsgrdsaurora89D6CFEC": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-appStatefull/AuroraMysql/sg-rds-aurora",
        "GroupName": "wcc-sg-ps-dev-aurora-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.200.1.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
          Object {
            "CidrIp": "10.200.101.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-aurora-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraMysqlslowqueryLogSubscriptionFilter0E58A533": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSourceStreamE5A932D7",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
  response_status = \\"SUCCESS\\"
  error_message = \\"\\"
  try:
    props = event[\\"ResourceProperties\\"]
    bucket = props[\\"BucketName\\"]
    notification_configuration = props[\\"NotificationConfiguration\\"]
    request_type = event[\\"RequestType\\"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception(\\"Failed to put bucket notification configuration\\")
    response_status = \\"FAILED\\"
    error_message = f\\"Error: {str(e)}. \\"
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      \\"Status\\": response_status,
      \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
      \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
      \\"StackId\\": event[\\"StackId\\"],
      \\"RequestId\\": event[\\"RequestId\\"],
      \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
      \\"NoEcho\\": False,
    }
  ).encode(\\"utf-8\\")
  headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode(\\"utf-8\\"))
    print(\\"Status code: \\" + response.reason)
  except Exception as e:
      print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-rds-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-dev-rds-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-rds-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcrRepositoryCrcbEcrRepository4A181266": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-dev-crcb-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-dev-crcb-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryLemsEcrRepository6F6AB26B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-dev-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-dev-lems-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryMubEcrRepository0646994A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-dev-mub-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-dev-mub-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "e45ee2082d227db1b6f0292696ce5ce2b061c105d15efb341925ca040d1feb68.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStream988E743F": Object {
      "DependsOn": Array [
        "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-rds-audit-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
            },
            "LogStreamName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-audit/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupSourceStream0F2E9FA1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "auditLogBackupDeliveryStreamLogGroup380ADE01": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamS3DestinationRole38051E8B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupDeliveryStreamLogGroup380ADE01",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStreamServiceRoleA3872BE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupSourceStream0F2E9FA1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-rds-audit-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "auditLogBackupSubscriptionFilterRole4CF1AC4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSubscriptionFilterRole4CF1AC4C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupSubscriptionFilterRole4CF1AC4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStream94D26D09": Object {
      "DependsOn": Array [
        "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-rds-error-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
            },
            "LogStreamName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-error/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupSourceStream731398D4",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-error-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "errorLogBackupDeliveryStreamLogGroup9EAB4ED0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSourceStream731398D4": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-rds-error-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "errorLogBackupSubscriptionFilterRole581B648A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSubscriptionFilterRole581B648A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupSubscriptionFilterRole581B648A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStream785A07E0": Object {
      "DependsOn": Array [
        "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-rds-general-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
            },
            "LogStreamName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-general/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamS3DestinationRole39241273",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupSourceStreamC7156042",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamServiceRoleF612D538",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-general-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "generalLogBackupDeliveryStreamLogGroupF29A1721": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamS3DestinationRole39241273": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupDeliveryStreamLogGroupF29A1721",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamS3DestinationRole39241273",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamServiceRoleF612D538",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleF612D538": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupSourceStreamC7156042": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-rds-general-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSubscriptionFilterRoleE58546A9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupSubscriptionFilterRoleE58546A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupSubscriptionFilterRoleE58546A9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "s3executedcheckupresultfiless3Bucket87791383": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-executed-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-dev-executed-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-executed-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3executedcheckupresultfiless3BucketPolicy3687CC05": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3executedcheckupresultfiless3Bucket87791383",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3executedcheckupresultfiless3Bucket87791383",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3executedcheckupresultfiless3Bucket87791383",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3masterfiless3BucketA965B49C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-master-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-dev-master-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-master-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3masterfiless3BucketNotificationsD17B3C7A": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3masterfiless3BucketPolicy7398B30D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3masterfiless3BucketA965B49C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3masterfiless3BucketA965B49C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3uploadedcheckupresultfiless3BucketEB10AA1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-uploaded-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-dev-uploaded-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-uploaded-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3uploadedcheckupresultfiless3BucketNotifications6E88FE28": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3uploadedcheckupresultfiless3BucketPolicy8A996C24": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "slowqueryLogBackupDeliveryStreamA6BE1255": Object {
      "DependsOn": Array [
        "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-dev-rds-slowquery-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
            },
            "LogStreamName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-slowquery/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupSourceStreamE5A932D7",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "slowqueryLogBackupDeliveryStreamLogGroup71573CA1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-dev-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupSourceStreamE5A932D7": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-dev-rds-slowquery-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-dev-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-dev networkStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefPsVpcB3B0C151B33DF0C2": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
      },
      "Value": Object {
        "Ref": "PsVpcB3B0C151",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
      },
    },
    "ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570": Object {
      "Export": Object {
        "Name": "dev-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
      },
      "Value": Object {
        "Ref": "S3LogBuckets3Bucket9252A6FD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PsVpcB3B0C151": Object {
      "Properties": Object {
        "CidrBlock": "10.200.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-vpc-ps-dev-apne1-01",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "PsVpcIgw5C685DB3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-igw-ps-dev-01",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "PsVpcIgwAtt70BBF2A3": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "PsVpcPrivateSubnet0PrivateSubnetDefaultRoute4966EBAE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet0NatGateway1C7BC65D",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet0PrivateSubnetE40A98D3": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.200.1.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-dev-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-dev-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTableAssociationA4BCDB43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.200.101.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-dev-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet1PrivateSubnetDefaultRoute8B1574DC": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet1NatGateway449156E1",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-dev-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTableAssociationB5686E53": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0Eip29037005": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-dev-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet0NatGateway1C7BC65D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet0Eip29037005",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-dev-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet0PublicSubnet2D08C832": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.200.0.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-dev-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet0PublicSubnetDefaultRouteA06EF3AF": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableAssociationB5186F48": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-dev-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1EipB03695F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-dev-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet1NatGateway449156E1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet1EipB03695F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-dev-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet1PublicSubnetDefaultRouteE5FC4C06": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet1PublicSubnetF4FCB026": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.200.100.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-dev-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-dev-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTableAssociation435B1413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcS3GatewayEp039F2B29": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
          },
          Object {
            "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "PsVpcvpcFlowLog44076D7B": Object {
      "Properties": Object {
        "LogDestination": "arn:aws:s3:::wcc-s3-ps-dev-vpcflowlog-01/wcc-s3-ps-dev-log-vpcflowlog-01/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": Object {
          "Ref": "PsVpcB3B0C151",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-log-vpcflowlog-01",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "S3LogBuckets3Bucket9252A6FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-dev-s3-accesslog-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-dev-accesslog-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-dev-s3-accesslog-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "S3LogBuckets3BucketPolicyDB375CE9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "S3LogBuckets3Bucket9252A6FD",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "S3LogBuckets3Bucket9252A6FD",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "S3LogBuckets3Bucket9252A6FD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-dev-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "S3LogBuckets3Bucket9252A6FD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-dev opsStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "ec2bastionAAEED1EE": Object {
      "DependsOn": Array [
        "roleec2bastionFAACD82E",
      ],
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "Iops": 3000,
              "VolumeSize": 8,
              "VolumeType": "gp3",
            },
          },
        ],
        "DisableApiTermination": true,
        "IamInstanceProfile": Object {
          "Ref": "ec2bastionInstanceProfile4EB81733",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "sgec2bastionE0536592",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ec2-ps-dev-bastion-01",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
hostnamectl set-hostname wcc-ec2-ps-dev-bastion-01
echo \\"preserve_hostname: true\\" >> /etc/cloud/cloud.cfg
timedatectl set-timezone Asia/Tokyo
yum update -y",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ec2bastionInstanceProfile4EB81733": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "roleec2bastionFAACD82E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "roleec2bastionFAACD82E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "bastion ec2 role",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-dev-bastion-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-dev-bastion-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sgec2bastionE0536592": Object {
      "Properties": Object {
        "GroupDescription": "dev-wcc-ops/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-dev-bastion-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-dev",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-dev-bastion-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "dev-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-pro appBackendStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrcbLogBackupDeliveryStream15F60D74": Object {
      "DependsOn": Array [
        "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-ecs-crcb-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
            },
            "LogStreamName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupSourceStream2B7AD051",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamServiceRole276464BF",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupDeliveryStreamServiceRole276464BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamServiceRole276464BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupSourceStream2B7AD051": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-ecs-crcb-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "CrcbLogBackupSubscriptionFilterRoleDEDB945F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-app-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-pro-app-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-app-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FargateAppCrcbBatchEcsLogsGroup0B3736CA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-pro-crcb-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-pro-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppCrcbBatchEcsLogsGroupSubscriptionFilterAF228516": Object {
      "DependsOn": Array [
        "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSourceStream2B7AD051",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppCrcbBatchEcsTask89722423": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "pro",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
              Object {
                "Name": "APP_API_JWT",
                "Value": "Requieres Bearer Token.",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-pro-crcb-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-pro-crcb-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskRole044317F2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppCrcbBatchEcsTaskEventsRole294D135C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-pro-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskRole044317F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-pro-crcb-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-crcb-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskRole044317F2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-pro-crcb-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-crcb-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchMasterfileUploadRuleBE974E6E": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload convertedCheckupResult.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-pro-crcb-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppCrcbBatchsgec2bastionB06A6250",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppCrcbBatchsgec2bastionB06A6250": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-appBackend/FargateApp/CrcbBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-pro-crcb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-crcb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppEcsClusterB9DD496E": Object {
      "Properties": Object {
        "ClusterName": "wcc-ecs-ps-pro-cluster-01",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-ps-pro-cluster-01",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "FargateAppLemsServiceEcsLogsGroup9927752F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-pro-lems-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-pro-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppLemsServiceEcsLogsGroupSubscriptionFilter2E05B3F5": Object {
      "DependsOn": Array [
        "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSourceStream4CB467E1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSubscriptionFilterRole91241D37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppLemsServiceEcsServiceE47001FE": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "FargateAppEcsClusterB9DD496E",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "EcsContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Fn::ImportValue": "pro-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServicesgec2bastion11E8D0F3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
              },
              Object {
                "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
              },
            ],
          },
        },
        "ServiceName": "wcc-ecs-service-ps-pro-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-service-ps-pro-lems-01",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FargateAppLemsServiceEcsTaskDef879E2E8E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateAppLemsServiceEcsTaskDef879E2E8E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "pro",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:3000/api/healthcheck || exit 1",
              ],
              "Interval": 30,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-pro-lems-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-pro-lems-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskRole2D2C6425",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServiceEcsLogsGroup9927752F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB",
        "Roles": Array [
          Object {
            "Ref": "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-pro-lems-ecste-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-lems-ecste-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceEcsTaskRole2D2C6425": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-pro-lems-ecst-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-lems-ecst-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceRunningTaskCountArarmFABD6E49": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-lems-running-task-count-01",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceCpuAlarmD01AE085": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-lems-service-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceMemoryAlarm97960674": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-lems-service-memory-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServicesgec2bastion11E8D0F3": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-appBackend/FargateApp/LemsService/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-pro-lems-ecs-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-lems-ecs-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppLemsServicesgec2bastionfromprowccappConnectionLemsALBsgalbBAA1166630007FAF29A4": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServicesgec2bastion11E8D0F3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "pro-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FargateAppMubBatchEcsLogsGroupFB01F4E0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-pro-mub-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-pro-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppMubBatchEcsLogsGroupSubscriptionFilterA917DFF5": Object {
      "DependsOn": Array [
        "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSourceStream185B81A1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSubscriptionFilterRole190AE990",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppMubBatchEcsTask30919817": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "pro",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-pro-mub-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-pro-mub-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskRole426A3787",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppMubBatchEcsTaskEventsRole2FACE830": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-pro-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskRole426A3787",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskEventsRole2FACE830",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskExecutionRole2EED45E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-pro-mub-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-mub-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskRole426A3787": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-pro-mub-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-mub-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchMasterfileUploadRuleC20F6686": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload a masterfile.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "pro-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-pro-mub-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppMubBatchsgec2bastion738FA0EE",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppMubBatchEcsTaskEventsRole2FACE830",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppMubBatchsgec2bastion738FA0EE": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-appBackend/FargateApp/MubBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-pro-mub-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-mub-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LemsLogBackupDeliveryStream80144FC4": Object {
      "DependsOn": Array [
        "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-ecs-lems-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
            },
            "LogStreamName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupSourceStream4CB467E1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LemsLogBackupDeliveryStreamLogGroup7C59CD90": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleFB1785E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSourceStream4CB467E1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-ecs-lems-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LemsLogBackupSubscriptionFilterRole91241D37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSubscriptionFilterRole91241D37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupSubscriptionFilterRole91241D37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamADBF156A": Object {
      "DependsOn": Array [
        "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-ecs-mub-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
            },
            "LogStreamName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupSourceStream185B81A1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamServiceRole6D9BF515",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "MubLogBackupDeliveryStreamLogGroupD9F8625A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamS3DestinationRole647E8A68": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupDeliveryStreamLogGroupD9F8625A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamServiceRole6D9BF515": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamServiceRole6D9BF515",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupSourceStream185B81A1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-ecs-mub-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "MubLogBackupSubscriptionFilterRole190AE990": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSubscriptionFilterRole190AE990",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupSubscriptionFilterRole190AE990",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-pro appConnectionStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD": Object {
      "Export": Object {
        "Name": "pro-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "LemsALBsgalb360F0F1A",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE": Object {
      "Export": Object {
        "Name": "pro-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
      },
      "Value": Object {
        "Ref": "LemsALBTargetGroup1694B0AFD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FrontAppDistributionCFDistribution3D02667E": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "ps-pro.wellcoms.jp",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Headers": Array [
                  "Authorization",
                ],
                "QueryString": true,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "DefaultTTL": 0,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "MaxTTL": 0,
            "MinTTL": 0,
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": false,
          "Logging": Object {
            "Bucket": "wcc-s3-ps-pro-cloudfrontlog-01.s3.ap-northeast-1.amazonaws.com",
            "IncludeCookies": true,
            "Prefix": "accesslog/",
          },
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "webBuckets3Bucket10AEEE1D",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "FrontAppOai146E590D",
                      },
                    ],
                  ],
                },
              },
            },
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 443,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "ps-pro-org.wellcoms.jp",
              "Id": "origin2",
              "OriginCustomHeaders": Array [
                Object {
                  "HeaderName": "FRONT-HEADER",
                  "HeaderValue": "6ac73c3e-f436-5aa5-8331-0ff06e5fc5c4",
                },
              ],
            },
          ],
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": Object {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:762436071096:certificate/452f971d-b42f-4cbf-8488-c86c547b5f29",
            "SslSupportMethod": "sni-only",
          },
          "WebACLId": "arn:aws:wafv2:us-east-1:762436071096:global/webacl/wcc-waf-ps-pro-cloudfront-01/42c39174-10e4-4463-9e37-3d24951e99b5",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cloudfront-ps-pro-api-webhosting-01",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FrontAppOai146E590D": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "s3 web access.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "LemsALBALBRuleWithHeader52E92326": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LemsALBTargetGroup1694B0AFD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "http-header",
            "HttpHeaderConfig": Object {
              "HttpHeaderName": "FRONT-HEADER",
              "Values": Array [
                "6ac73c3e-f436-5aa5-8331-0ff06e5fc5c4",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "LemsALBAlbAlbListener3E2CC054",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LemsALBAlb29929891": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": "wcc-s3-ps-pro-elblog-01",
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "accesslog",
          },
        ],
        "Name": "wcc-alb-ps-pro-lems-01",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LemsALBsgalb360F0F1A",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
          },
          Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-alb-ps-pro-lems-01",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LemsALBAlbAlbListener3E2CC054": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:ap-northeast-1:762436071096:certificate/c73898dc-7bf3-4f50-9426-5bf33cf01bf1",
          },
        ],
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "StatusCode": "403",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LemsALBAlb29929891",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LemsALBTargetGroup1694B0AFD": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/healthcheck",
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LemsALBsgalb360F0F1A": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-appConnection/LemsALB/sg-alb",
        "GroupName": "wcc-sg-ps-pro-alb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-alb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryApp8441B565": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsApiCanaryAppServiceRole17107E2B",
            "Arn",
          ],
        },
        "Name": "wcc-ps-pro-api",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-pro.wellcoms.jp",
            "TARGETPATH": "/api/healthcheck",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsApiCanaryAppSecurityGroupFD5446AC",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsApiCanaryAppSecurityGroupFD5446AC": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary prowccappConnectionSyntheticsApiCanaryAppC3682216",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryAppServiceRole17107E2B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsApiappCanalyPolicyToS3FBE92555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsApiappCanalyPolicyToS3FBE92555",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsApiCanaryAppServiceRole17107E2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsApicanaryFailed181B325A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-api-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsApiCanaryApp8441B565",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticsFrontCanaryAppB8A2B56A": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
            "Arn",
          ],
        },
        "Name": "wcc-ps-pro-front",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-pro.wellcoms.jp",
            "TARGETPATH": "/",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary prowccappConnectionSyntheticsFrontCanaryAppA8F41954",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsFrontCanaryAppServiceRole2DB60CCC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsFrontappCanalyPolicyToS3C7BAAD91": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsFrontappCanalyPolicyToS3C7BAAD91",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsFrontcanaryFailed0CA4F644": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-front-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsFrontCanaryAppB8A2B56A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canaryArtifacts3BucketC3B44A8D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-canary-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-pro-canary-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-canary-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "canaryArtifacts3BucketPolicy7BC8766C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "canaryArtifacts3BucketC3B44A8D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "canaryArtifacts3BucketC3B44A8D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "canaryArtifacts3BucketC3B44A8D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "webBuckets3Bucket10AEEE1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-web-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-pro-web-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-web-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "webBuckets3BucketPolicy2B9A4E37": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "webBuckets3Bucket10AEEE1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "webBuckets3Bucket10AEEE1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "webBuckets3Bucket10AEEE1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "FrontAppOai146E590D",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "webBuckets3Bucket10AEEE1D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-pro appStatefullStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryCrcbEcrRepository4A181266",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryLemsEcrRepository6F6AB26B",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryMubEcrRepository0646994A",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
      },
      "Value": Object {
        "Ref": "AuroraMysqldbSecret3EE8ABE5",
      },
    },
    "ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
      },
      "Value": Object {
        "Ref": "EcrRepositoryCrcbEcrRepository4A181266",
      },
    },
    "ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
      },
      "Value": Object {
        "Ref": "EcrRepositoryLemsEcrRepository6F6AB26B",
      },
    },
    "ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
      },
      "Value": Object {
        "Ref": "EcrRepositoryMubEcrRepository0646994A",
      },
    },
    "ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
      },
      "Value": Object {
        "Ref": "s3executedcheckupresultfiless3Bucket87791383",
      },
    },
    "ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
      },
      "Value": Object {
        "Ref": "s3masterfiless3BucketA965B49C",
      },
    },
    "ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559": Object {
      "Export": Object {
        "Name": "pro-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
      },
      "Value": Object {
        "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMysqlCpuUtilizationF9A2F6FC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-rds-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlMemoryUtilizationFFF9E1BC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:762436071096:wcc-snstopic-ps-pro-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-pro-rds-memory-utilization-01",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 644245094.4,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlauditLogSubscriptionFilter20D58C8F": Object {
      "DependsOn": Array [
        "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSourceStream0F2E9FA1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSubscriptionFilterRole4CF1AC4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Copy RDS snapshots cross-region.",
        "Environment": Object {
          "Variables": Object {
            "DESTINATION_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-pro-copy-snapshot-01",
        "Handler": "copy-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-pro-delete-snapshot-01",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-pro-delete-snapshot-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DescribeDBSnapshots",
                "rds:CopyDBSnapshot",
                "rds:CopyDBClusterSnapshot",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowCopyRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881": Object {
      "Properties": Object {
        "Description": "Delete RDS snapshots rule.",
        "Name": "wcc-event-ps-pro-delete-snapshot-01",
        "ScheduleExpression": "cron(0 15 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRuleAllowEventRuleprowccappStatefullAuroraMysqlcopySnapshotDeleteSnapshotFuncAA39F9103E05B049": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Delete RDS snapshots.",
        "Environment": Object {
          "Variables": Object {
            "DELETE_DAYS": "7",
            "RDS_CLUSTER_NAME": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
            "TARGET_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-pro-delete-snapshot-01",
        "Handler": "delete-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DeleteDBClusterSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBClusterSnapshots",
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowDeleteRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC": Object {
      "Properties": Object {
        "Description": "Event on create RDS backup.",
        "EventPattern": Object {
          "detail": Object {
            "EventID": Array [
              "RDS-EVENT-0075",
              "RDS-EVENT-0169",
            ],
            "SourceIdentifier": Array [
              Object {
                "prefix": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "rds:",
                      Object {
                        "Ref": "AuroraMysqlrdsaurora1AD58F64",
                      },
                    ],
                  ],
                },
              },
            ],
          },
          "detail-type": Array [
            "RDS DB Cluster Snapshot Event",
          ],
          "source": Array [
            "aws.rds",
          ],
        },
        "Name": "wcc-event-ps-pro-copy-snapshot-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupAllowEventRuleprowccappStatefullAuroraMysqlcopySnapshotCopySnapshotFunc6EA3CCAFFDE4C06A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqldbSecret3EE8ABE5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "RDS AuroraMysql user password.",
        "GenerateSecretString": Object {
          "ExcludeCharacters": "\\"%+~\`#$&()|[]{}:;<>?!'/@)*-\\\\",
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\\"username\\":\\"auroramysql\\"}",
        },
        "Name": "wcc-sm-ps-pro-aurora-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sm-ps-pro-aurora-01",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqldbSecretAttachment17C2F2B2": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraMysqldbSecret3EE8ABE5",
        },
        "TargetId": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMysqlerrorLogSubscriptionFilterDDECEAB5": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSourceStream731398D4",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSubscriptionFilterRole581B648A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlgeneralLogSubscriptionFilterA822B9D4": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSourceStreamC7156042",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSubscriptionFilterRoleE58546A9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlrdsaurora1AD58F64": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "wcc-aurora-ps-pro-cluster-01",
        "DBClusterParameterGroupName": Object {
          "Ref": "AuroraMysqlrdsparameterGrpC9897E1B",
        },
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "DatabaseName": "rsltproc",
        "DeletionProtection": true,
        "EnableCloudwatchLogsExports": Array [
          "error",
          "general",
          "slowquery",
          "audit",
        ],
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.02.1",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 3306,
        "PreferredBackupWindow": "16:00-16:30",
        "PreferredMaintenanceWindow": "Sat:15:00-Sat:15:30",
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-aurora-ps-pro-cluster-01",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraMysqlsgrdsaurora89D6CFEC",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance1FB2FA22C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-pro-instance-01-1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance217DBA6B3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-pro-instance-01-2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraLogRetentionaudit240213FA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraMonitoringRole062D4CDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlrdsparameterGrpC9897E1B": Object {
      "Properties": Object {
        "Description": "wcc-parametergrp-ps-pro-aurora-01",
        "Family": "aurora-mysql8.0",
        "Parameters": Object {
          "character_set_client": "utf8mb4",
          "character_set_connection": "utf8mb4",
          "character_set_database": "utf8mb4",
          "character_set_results": "utf8mb4",
          "character_set_server": "utf8mb4",
          "collation_connection": "utf8mb4_bin",
          "collation_server": "utf8mb4_bin",
          "general_log": "1",
          "server_audit_events": "CONNECT,QUERY,TABLE",
          "server_audit_logging": "1",
          "server_audit_logs_upload": "1",
          "slow_query_log": "1",
          "time_zone": "Asia/Tokyo",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-parametergrp-ps-pro-aurora-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraMysqlrdssubnetgrpD5955B6A": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "wcc-subnetgrp-ps-pro-private-01",
        "DBSubnetGroupName": "wcc-subnetgrp-ps-pro-private-01",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
          },
          Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnetgrp-ps-pro-private-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMysqlsgrdsaurora89D6CFEC": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-appStatefull/AuroraMysql/sg-rds-aurora",
        "GroupName": "wcc-sg-ps-pro-aurora-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.100.1.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
          Object {
            "CidrIp": "10.100.101.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-aurora-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraMysqlslowqueryLogSubscriptionFilter0E58A533": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSourceStreamE5A932D7",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
  response_status = \\"SUCCESS\\"
  error_message = \\"\\"
  try:
    props = event[\\"ResourceProperties\\"]
    bucket = props[\\"BucketName\\"]
    notification_configuration = props[\\"NotificationConfiguration\\"]
    request_type = event[\\"RequestType\\"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception(\\"Failed to put bucket notification configuration\\")
    response_status = \\"FAILED\\"
    error_message = f\\"Error: {str(e)}. \\"
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      \\"Status\\": response_status,
      \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
      \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
      \\"StackId\\": event[\\"StackId\\"],
      \\"RequestId\\": event[\\"RequestId\\"],
      \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
      \\"NoEcho\\": False,
    }
  ).encode(\\"utf-8\\")
  headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode(\\"utf-8\\"))
    print(\\"Status code: \\" + response.reason)
  except Exception as e:
      print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-rds-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-pro-rds-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-rds-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcrRepositoryCrcbEcrRepository4A181266": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-pro-crcb-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-pro-crcb-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryLemsEcrRepository6F6AB26B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-pro-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-pro-lems-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryMubEcrRepository0646994A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-pro-mub-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-pro-mub-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "e45ee2082d227db1b6f0292696ce5ce2b061c105d15efb341925ca040d1feb68.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStream988E743F": Object {
      "DependsOn": Array [
        "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-rds-audit-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
            },
            "LogStreamName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-audit/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupSourceStream0F2E9FA1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "auditLogBackupDeliveryStreamLogGroup380ADE01": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamS3DestinationRole38051E8B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupDeliveryStreamLogGroup380ADE01",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStreamServiceRoleA3872BE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupSourceStream0F2E9FA1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-rds-audit-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "auditLogBackupSubscriptionFilterRole4CF1AC4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSubscriptionFilterRole4CF1AC4C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupSubscriptionFilterRole4CF1AC4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStream94D26D09": Object {
      "DependsOn": Array [
        "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-rds-error-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
            },
            "LogStreamName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-error/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupSourceStream731398D4",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-error-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "errorLogBackupDeliveryStreamLogGroup9EAB4ED0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSourceStream731398D4": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-rds-error-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "errorLogBackupSubscriptionFilterRole581B648A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSubscriptionFilterRole581B648A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupSubscriptionFilterRole581B648A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStream785A07E0": Object {
      "DependsOn": Array [
        "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-rds-general-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
            },
            "LogStreamName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-general/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamS3DestinationRole39241273",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupSourceStreamC7156042",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamServiceRoleF612D538",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-general-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "generalLogBackupDeliveryStreamLogGroupF29A1721": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamS3DestinationRole39241273": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupDeliveryStreamLogGroupF29A1721",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamS3DestinationRole39241273",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamServiceRoleF612D538",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleF612D538": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupSourceStreamC7156042": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-rds-general-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSubscriptionFilterRoleE58546A9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupSubscriptionFilterRoleE58546A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupSubscriptionFilterRoleE58546A9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "s3executedcheckupresultfiless3Bucket87791383": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-executed-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-pro-executed-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-executed-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3executedcheckupresultfiless3BucketPolicy3687CC05": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3executedcheckupresultfiless3Bucket87791383",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3executedcheckupresultfiless3Bucket87791383",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3executedcheckupresultfiless3Bucket87791383",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3masterfiless3BucketA965B49C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-master-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-pro-master-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-master-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3masterfiless3BucketNotificationsD17B3C7A": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3masterfiless3BucketPolicy7398B30D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3masterfiless3BucketA965B49C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3masterfiless3BucketA965B49C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3uploadedcheckupresultfiless3BucketEB10AA1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-uploaded-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-pro-uploaded-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-uploaded-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3uploadedcheckupresultfiless3BucketNotifications6E88FE28": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3uploadedcheckupresultfiless3BucketPolicy8A996C24": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "slowqueryLogBackupDeliveryStreamA6BE1255": Object {
      "DependsOn": Array [
        "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-pro-rds-slowquery-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
            },
            "LogStreamName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-slowquery/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupSourceStreamE5A932D7",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "slowqueryLogBackupDeliveryStreamLogGroup71573CA1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-pro-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupSourceStreamE5A932D7": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-pro-rds-slowquery-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-pro-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-pro networkStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefPsVpcB3B0C151B33DF0C2": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
      },
      "Value": Object {
        "Ref": "PsVpcB3B0C151",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
      },
    },
    "ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570": Object {
      "Export": Object {
        "Name": "pro-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
      },
      "Value": Object {
        "Ref": "S3LogBuckets3Bucket9252A6FD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PsVpcB3B0C151": Object {
      "Properties": Object {
        "CidrBlock": "10.100.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-vpc-ps-pro-apne1-01",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "PsVpcIgw5C685DB3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-igw-ps-pro-01",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "PsVpcIgwAtt70BBF2A3": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "PsVpcPrivateSubnet0PrivateSubnetDefaultRoute4966EBAE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet0NatGateway1C7BC65D",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet0PrivateSubnetE40A98D3": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.100.1.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-pro-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-pro-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTableAssociationA4BCDB43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.100.101.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-pro-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet1PrivateSubnetDefaultRoute8B1574DC": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet1NatGateway449156E1",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-pro-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTableAssociationB5686E53": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0Eip29037005": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-pro-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet0NatGateway1C7BC65D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet0Eip29037005",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-pro-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet0PublicSubnet2D08C832": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.100.0.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-pro-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet0PublicSubnetDefaultRouteA06EF3AF": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableAssociationB5186F48": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-pro-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1EipB03695F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-pro-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet1NatGateway449156E1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet1EipB03695F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-pro-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet1PublicSubnetDefaultRouteE5FC4C06": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet1PublicSubnetF4FCB026": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.100.100.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-pro-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-pro-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTableAssociation435B1413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcS3GatewayEp039F2B29": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
          },
          Object {
            "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "PsVpcvpcFlowLog44076D7B": Object {
      "Properties": Object {
        "LogDestination": "arn:aws:s3:::wcc-s3-ps-pro-vpcflowlog-01/wcc-s3-ps-pro-log-vpcflowlog-01/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": Object {
          "Ref": "PsVpcB3B0C151",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-log-vpcflowlog-01",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "S3LogBuckets3Bucket9252A6FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-pro-s3-accesslog-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-pro-accesslog-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-pro-s3-accesslog-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "S3LogBuckets3BucketPolicyDB375CE9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "S3LogBuckets3Bucket9252A6FD",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "S3LogBuckets3Bucket9252A6FD",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "S3LogBuckets3Bucket9252A6FD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-pro-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "S3LogBuckets3Bucket9252A6FD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-pro opsStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "ec2bastionAAEED1EE": Object {
      "DependsOn": Array [
        "roleec2bastionFAACD82E",
      ],
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "Iops": 3000,
              "VolumeSize": 8,
              "VolumeType": "gp3",
            },
          },
        ],
        "DisableApiTermination": true,
        "IamInstanceProfile": Object {
          "Ref": "ec2bastionInstanceProfile4EB81733",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "sgec2bastionE0536592",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ec2-ps-pro-bastion-01",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
hostnamectl set-hostname wcc-ec2-ps-pro-bastion-01
echo \\"preserve_hostname: true\\" >> /etc/cloud/cloud.cfg
timedatectl set-timezone Asia/Tokyo
yum update -y",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ec2bastionInstanceProfile4EB81733": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "roleec2bastionFAACD82E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "roleec2bastionFAACD82E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "bastion ec2 role",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-pro-bastion-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-pro-bastion-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sgec2bastionE0536592": Object {
      "Properties": Object {
        "GroupDescription": "pro-wcc-ops/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-pro-bastion-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-pro",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-pro-bastion-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "pro-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-stg appBackendStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrcbLogBackupDeliveryStream15F60D74": Object {
      "DependsOn": Array [
        "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-ecs-crcb-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
            },
            "LogStreamName": Object {
              "Ref": "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupSourceStream2B7AD051",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CrcbLogBackupDeliveryStreamServiceRole276464BF",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamLogGroupS3Destination32CFC0EF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupDeliveryStreamLogGroupF09A1CC0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy08F520A5",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamS3DestinationRole0E6AA57B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupDeliveryStreamServiceRole276464BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupDeliveryStreamServiceRoleDefaultPolicy0252CDDD",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupDeliveryStreamServiceRole276464BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrcbLogBackupSourceStream2B7AD051": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-ecs-crcb-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-ecs-crcb-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "CrcbLogBackupSubscriptionFilterRoleDEDB945F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSourceStream2B7AD051",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
        "Roles": Array [
          Object {
            "Ref": "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-app-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-stg-app-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-app-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FargateAppCrcbBatchEcsLogsGroup0B3736CA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-stg-crcb-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-stg-crcb-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppCrcbBatchEcsLogsGroupSubscriptionFilterAF228516": Object {
      "DependsOn": Array [
        "CrcbLogBackupSubscriptionFilterRoleDefaultPolicy464B9F86",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSourceStream2B7AD051",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrcbLogBackupSubscriptionFilterRoleDEDB945F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppCrcbBatchEcsTask89722423": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "stg",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
              Object {
                "Name": "APP_API_JWT",
                "Value": "Requieres Bearer Token.",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-stg-crcb-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-stg-crcb-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppCrcbBatchEcsTaskRole044317F2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppCrcbBatchEcsTaskEventsRole294D135C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-stg-crcb-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsTaskRole044317F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskEventsRoleDefaultPolicy3B26EB2A",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-stg-crcb-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-crcb-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppCrcbBatchEcsLogsGroup0B3736CA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppCrcbBatchEcsTaskExecutionRoleDefaultPolicyC962EB84",
        "Roles": Array [
          Object {
            "Ref": "FargateAppCrcbBatchEcsTaskExecutionRole1624CDD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppCrcbBatchEcsTaskRole044317F2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-stg-crcb-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-crcb-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppCrcbBatchMasterfileUploadRuleBE974E6E": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload convertedCheckupResult.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-stg-crcb-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppCrcbBatchsgec2bastionB06A6250",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppCrcbBatchEcsTask89722423",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppCrcbBatchEcsTaskEventsRole294D135C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppCrcbBatchsgec2bastionB06A6250": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-appBackend/FargateApp/CrcbBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-stg-crcb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-crcb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppEcsClusterB9DD496E": Object {
      "Properties": Object {
        "ClusterName": "wcc-ecs-ps-stg-cluster-01",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-ps-stg-cluster-01",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "FargateAppLemsServiceEcsLogsGroup9927752F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-stg-lems-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-stg-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppLemsServiceEcsLogsGroupSubscriptionFilter2E05B3F5": Object {
      "DependsOn": Array [
        "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSourceStream4CB467E1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "LemsLogBackupSubscriptionFilterRole91241D37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppLemsServiceEcsServiceE47001FE": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "FargateAppEcsClusterB9DD496E",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "EcsContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Fn::ImportValue": "stg-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServicesgec2bastion11E8D0F3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
              },
              Object {
                "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
              },
            ],
          },
        },
        "ServiceName": "wcc-ecs-service-ps-stg-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-service-ps-stg-lems-01",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FargateAppLemsServiceEcsTaskDef879E2E8E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateAppLemsServiceEcsTaskDef879E2E8E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "stg",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
              Object {
                "Name": "UPLOADED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
                },
              },
              Object {
                "Name": "EXECUTED_CHECKUP_RESULT_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:3000/api/healthcheck || exit 1",
              ],
              "Interval": 30,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-stg-lems-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-stg-lems-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServiceEcsTaskRole2D2C6425",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppLemsServiceEcsLogsGroup9927752F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppLemsServiceEcsTaskExecutionRoleDefaultPolicyBFC07AFB",
        "Roles": Array [
          Object {
            "Ref": "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppLemsServiceEcsTaskExecutionRoleEB9A1A62": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-stg-lems-ecste-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-lems-ecste-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceEcsTaskRole2D2C6425": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-stg-lems-ecst-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-lems-ecst-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppLemsServiceRunningTaskCountArarmFABD6E49": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-lems-running-task-count-01",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceCpuAlarmD01AE085": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-lems-service-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServiceServiceMemoryAlarm97960674": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-lems-service-memory-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "FargateAppEcsClusterB9DD496E",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateAppLemsServiceEcsServiceE47001FE",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateAppLemsServicesgec2bastion11E8D0F3": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-appBackend/FargateApp/LemsService/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-stg-lems-ecs-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-lems-ecs-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateAppLemsServicesgec2bastionfromstgwccappConnectionLemsALBsgalb5447399C300024CABF16": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateAppLemsServicesgec2bastion11E8D0F3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "stg-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FargateAppMubBatchEcsLogsGroupFB01F4E0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "wcc-cwl-ps-stg-mub-01",
        "RetentionInDays": 365,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cwl-ps-stg-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateAppMubBatchEcsLogsGroupSubscriptionFilterA917DFF5": Object {
      "DependsOn": Array [
        "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSourceStream185B81A1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "MubLogBackupSubscriptionFilterRole190AE990",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "FargateAppMubBatchEcsTask30919817": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "NODE_ENV",
                "Value": "stg",
              },
              Object {
                "Name": "REGION",
                "Value": "ap-northeast-1",
              },
              Object {
                "Name": "MYSQL_SECRET_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          2,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          3,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          4,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET_KEY",
                "Value": "secretKey",
              },
              Object {
                "Name": "JWT_EXPIRES_IN",
                "Value": "10h",
              },
              Object {
                "Name": "MASTER_FILES_BUCKET_NAME",
                "Value": Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
                  },
                  ":latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "event",
              },
            },
            "Memory": 1024,
            "Name": "EcsContainer",
            "Secrets": Array [
              Object {
                "Name": "MYSQL_DATABASE",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
            "Arn",
          ],
        },
        "Family": "wcc-ecs-task-ps-stg-mub-01",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-stg-mub-01",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateAppMubBatchEcsTaskRole426A3787",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateAppMubBatchEcsTaskEventsRole2FACE830": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecs-task-ps-stg-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "FargateAppEcsClusterB9DD496E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsTaskRole426A3787",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskEventsRoleDefaultPolicyFDFA1CA9",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskEventsRole2FACE830",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskExecutionRole2EED45E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-stg-mub-te-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-mub-te-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateAppMubBatchEcsTaskExecutionRoleDefaultPolicyA7496C67",
        "Roles": Array [
          Object {
            "Ref": "FargateAppMubBatchEcsTaskExecutionRole2EED45E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateAppMubBatchEcsTaskRole426A3787": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "secretsmanager",
          },
        ],
        "RoleName": "wcc-role-ps-stg-mub-t-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-mub-t-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateAppMubBatchMasterfileUploadRuleC20F6686": Object {
      "Properties": Object {
        "Description": "Start fargate task when upload a masterfile.",
        "EventPattern": Object {
          "detail": Object {
            "bucket": Object {
              "name": Array [
                Object {
                  "Fn::ImportValue": "stg-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
                },
              ],
            },
          },
          "detail-type": Array [
            "Object Created",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "Name": "wcc-events-ps-stg-mub-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FargateAppEcsClusterB9DD496E",
                "Arn",
              ],
            },
            "EcsParameters": Object {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": Object {
                "AwsVpcConfiguration": Object {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FargateAppMubBatchsgec2bastion738FA0EE",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": Array [
                    Object {
                      "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
                    },
                    Object {
                      "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
                    },
                  ],
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        5,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "FargateAppMubBatchEcsTask30919817",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-object-key": "$.detail.object.key",
              },
              "InputTemplate": "{\\"containerOverrides\\":[{\\"name\\":\\"EcsContainer\\",\\"environment\\":[{\\"name\\":\\"UPLOADED_S3_OBJECT_KEY\\",\\"value\\":<detail-object-key>}]}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FargateAppMubBatchEcsTaskEventsRole2FACE830",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FargateAppMubBatchsgec2bastion738FA0EE": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-appBackend/FargateApp/MubBatch/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-stg-mub-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-mub-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LemsLogBackupDeliveryStream80144FC4": Object {
      "DependsOn": Array [
        "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-ecs-lems-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
            },
            "LogStreamName": Object {
              "Ref": "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppLemsServiceEcsLogsGroup9927752F",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupSourceStream4CB467E1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LemsLogBackupDeliveryStreamLogGroup7C59CD90": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamLogGroupS3Destination9C50E854": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupDeliveryStreamLogGroup7C59CD90",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy2CA4A30A",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamS3DestinationRole99852FBB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupDeliveryStreamServiceRoleDefaultPolicyC32BEE7C",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupDeliveryStreamServiceRoleFB1785E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LemsLogBackupDeliveryStreamServiceRoleFB1785E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSourceStream4CB467E1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-ecs-lems-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-ecs-lems-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LemsLogBackupSubscriptionFilterRole91241D37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSourceStream4CB467E1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LemsLogBackupSubscriptionFilterRole91241D37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LemsLogBackupSubscriptionFilterRoleDefaultPolicy90C49EC1",
        "Roles": Array [
          Object {
            "Ref": "LemsLogBackupSubscriptionFilterRole91241D37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamADBF156A": Object {
      "DependsOn": Array [
        "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-ecs-mub-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
            },
            "LogStreamName": Object {
              "Ref": "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "FargateAppMubBatchEcsLogsGroupFB01F4E0",
                },
                "/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupSourceStream185B81A1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "MubLogBackupDeliveryStreamServiceRole6D9BF515",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "MubLogBackupDeliveryStreamLogGroupD9F8625A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamLogGroupS3Destination16D6F423": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "MubLogBackupDeliveryStreamLogGroupD9F8625A",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "MubLogBackupDeliveryStreamS3DestinationRole647E8A68": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupDeliveryStreamLogGroupD9F8625A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy5C839EB1",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamS3DestinationRole647E8A68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupDeliveryStreamServiceRole6D9BF515": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupDeliveryStreamServiceRoleDefaultPolicy52675D15",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupDeliveryStreamServiceRole6D9BF515",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MubLogBackupSourceStream185B81A1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-ecs-mub-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-ecs-mub-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "MubLogBackupSubscriptionFilterRole190AE990": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSourceStream185B81A1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MubLogBackupSubscriptionFilterRole190AE990",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MubLogBackupSubscriptionFilterRoleDefaultPolicyF7AD49A2",
        "Roles": Array [
          Object {
            "Ref": "MubLogBackupSubscriptionFilterRole190AE990",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-stg appConnectionStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD": Object {
      "Export": Object {
        "Name": "stg-wcc-appConnection:ExportsOutputFnGetAttLemsALBsgalb360F0F1AGroupIdDA206FDD",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "LemsALBsgalb360F0F1A",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE": Object {
      "Export": Object {
        "Name": "stg-wcc-appConnection:ExportsOutputRefLemsALBTargetGroup1694B0AFDC5E127DE",
      },
      "Value": Object {
        "Ref": "LemsALBTargetGroup1694B0AFD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FrontAppDistributionCFDistribution3D02667E": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "ps-stg.wellcoms.jp",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Headers": Array [
                  "Authorization",
                ],
                "QueryString": true,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "DefaultTTL": 0,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "MaxTTL": 0,
            "MinTTL": 0,
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": false,
          "Logging": Object {
            "Bucket": "wcc-s3-ps-stg-cloudfrontlog-01.s3.ap-northeast-1.amazonaws.com",
            "IncludeCookies": true,
            "Prefix": "accesslog/",
          },
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "webBuckets3Bucket10AEEE1D",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "FrontAppOai146E590D",
                      },
                    ],
                  ],
                },
              },
            },
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 443,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "ps-stg-org.wellcoms.jp",
              "Id": "origin2",
              "OriginCustomHeaders": Array [
                Object {
                  "HeaderName": "FRONT-HEADER",
                  "HeaderValue": "f983397f-ebac-5691-b984-94768213c29f",
                },
              ],
            },
          ],
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": Object {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:048262783971:certificate/e5c85e0a-86ca-46b3-aff3-7e27be855fc2",
            "SslSupportMethod": "sni-only",
          },
          "WebACLId": "arn:aws:wafv2:us-east-1:048262783971:global/webacl/wcc-waf-ps-stg-cloudfront-01/b0678386-4f4a-4b6f-a250-6dd5d92956b3",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-cloudfront-ps-stg-api-webhosting-01",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FrontAppOai146E590D": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "s3 web access.",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "LemsALBALBRuleWithHeader52E92326": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LemsALBTargetGroup1694B0AFD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "http-header",
            "HttpHeaderConfig": Object {
              "HttpHeaderName": "FRONT-HEADER",
              "Values": Array [
                "f983397f-ebac-5691-b984-94768213c29f",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "LemsALBAlbAlbListener3E2CC054",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LemsALBAlb29929891": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": "wcc-s3-ps-stg-elblog-01",
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "accesslog",
          },
        ],
        "Name": "wcc-alb-ps-stg-lems-01",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LemsALBsgalb360F0F1A",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
          },
          Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-alb-ps-stg-lems-01",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LemsALBAlbAlbListener3E2CC054": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:ap-northeast-1:048262783971:certificate/b12a9052-bb40-499f-ae77-ac91323fc739",
          },
        ],
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "StatusCode": "403",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LemsALBAlb29929891",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LemsALBTargetGroup1694B0AFD": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/healthcheck",
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LemsALBsgalb360F0F1A": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-appConnection/LemsALB/sg-alb",
        "GroupName": "wcc-sg-ps-stg-alb-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-alb-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryApp8441B565": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsApiCanaryAppServiceRole17107E2B",
            "Arn",
          ],
        },
        "Name": "wcc-ps-stg-api",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-stg.wellcoms.jp",
            "TARGETPATH": "/api/healthcheck",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsApiCanaryAppSecurityGroupFD5446AC",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsApiCanaryAppSecurityGroupFD5446AC": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary stgwccappConnectionSyntheticsApiCanaryApp927B1523",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsApiCanaryAppServiceRole17107E2B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsApiappCanalyPolicyToS3FBE92555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsApiappCanalyPolicyToS3FBE92555",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsApiCanaryAppServiceRole17107E2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsApicanaryFailed181B325A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-api-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsApiCanaryApp8441B565",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticsFrontCanaryAppB8A2B56A": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifacts3BucketC3B44A8D",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "c6564fb7a34932fe43d7df0ea8f935d1564336058d8e2bc1e3310bb22c8063cc.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
            "Arn",
          ],
        },
        "Name": "wcc-ps-stg-front",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "ps-stg.wellcoms.jp",
            "TARGETPATH": "/",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.8",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "VPCConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
            },
            Object {
              "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
            },
          ],
          "VpcId": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticsFrontCanaryAppSecurityGroupAFE94B5F": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Canary stgwccappConnectionSyntheticsFrontCanaryApp5046E44F",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SyntheticsFrontCanaryAppServiceRole2DB60CCC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifacts3BucketC3B44A8D",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifacts3BucketC3B44A8D",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SyntheticsFrontappCanalyPolicyToS3C7BAAD91": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifacts3BucketC3B44A8D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SyntheticsFrontappCanalyPolicyToS3C7BAAD91",
        "Roles": Array [
          Object {
            "Ref": "SyntheticsFrontCanaryAppServiceRole2DB60CCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SyntheticsFrontcanaryFailed0CA4F644": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-front-canary-01-failed",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticsFrontCanaryAppB8A2B56A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canaryArtifacts3BucketC3B44A8D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-canary-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-stg-canary-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-canary-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "canaryArtifacts3BucketPolicy7BC8766C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "canaryArtifacts3BucketC3B44A8D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "canaryArtifacts3BucketC3B44A8D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "canaryArtifacts3BucketC3B44A8D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "webBuckets3Bucket10AEEE1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-web-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-stg-web-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-web-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "webBuckets3BucketPolicy2B9A4E37": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "webBuckets3Bucket10AEEE1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "webBuckets3Bucket10AEEE1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "webBuckets3Bucket10AEEE1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "FrontAppOai146E590D",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "webBuckets3Bucket10AEEE1D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-stg appStatefullStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryCrcbEcrRepository4A181266ArnBFC5F396",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryCrcbEcrRepository4A181266",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryLemsEcrRepository6F6AB26BArn7D640DCC",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryLemsEcrRepository6F6AB26B",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputFnGetAttEcrRepositoryMubEcrRepository0646994AArn2BC29583",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepositoryMubEcrRepository0646994A",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefAuroraMysqldbSecret3EE8ABE58C05FDAF",
      },
      "Value": Object {
        "Ref": "AuroraMysqldbSecret3EE8ABE5",
      },
    },
    "ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryCrcbEcrRepository4A181266D87D9802",
      },
      "Value": Object {
        "Ref": "EcrRepositoryCrcbEcrRepository4A181266",
      },
    },
    "ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryLemsEcrRepository6F6AB26B02780184",
      },
      "Value": Object {
        "Ref": "EcrRepositoryLemsEcrRepository6F6AB26B",
      },
    },
    "ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefEcrRepositoryMubEcrRepository0646994A2AF8B297",
      },
      "Value": Object {
        "Ref": "EcrRepositoryMubEcrRepository0646994A",
      },
    },
    "ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefs3executedcheckupresultfiless3Bucket877913837AF5070C",
      },
      "Value": Object {
        "Ref": "s3executedcheckupresultfiless3Bucket87791383",
      },
    },
    "ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefs3masterfiless3BucketA965B49C8A1055E2",
      },
      "Value": Object {
        "Ref": "s3masterfiless3BucketA965B49C",
      },
    },
    "ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559": Object {
      "Export": Object {
        "Name": "stg-wcc-appStatefull:ExportsOutputRefs3uploadedcheckupresultfiless3BucketEB10AA1D3E361559",
      },
      "Value": Object {
        "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMysqlCpuUtilizationF9A2F6FC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-rds-cpu-utilization-01",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 85,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlMemoryUtilizationFFF9E1BC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          "arn:aws:sns:ap-northeast-1:048262783971:wcc-snstopic-ps-stg-all-01",
        ],
        "AlarmName": "wcc-alarm-ps-stg-rds-memory-utilization-01",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 644245094.4,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMysqlauditLogSubscriptionFilter20D58C8F": Object {
      "DependsOn": Array [
        "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSourceStream0F2E9FA1",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "auditLogBackupSubscriptionFilterRole4CF1AC4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Copy RDS snapshots cross-region.",
        "Environment": Object {
          "Variables": Object {
            "DESTINATION_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-stg-copy-snapshot-01",
        "Handler": "copy-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-stg-delete-snapshot-01",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-lambda-ps-stg-delete-snapshot-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DescribeDBSnapshots",
                "rds:CopyDBSnapshot",
                "rds:CopyDBClusterSnapshot",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowCopyRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRoleDefaultPolicyD31FA1E5",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotCopySnapshotFuncServiceRole19717EE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881": Object {
      "Properties": Object {
        "Description": "Delete RDS snapshots rule.",
        "Name": "wcc-event-ps-stg-delete-snapshot-01",
        "ScheduleExpression": "cron(0 15 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRuleAllowEventRulestgwccappStatefullAuroraMysqlcopySnapshotDeleteSnapshotFuncA1FF05DBEA7FC370": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteRdsSnapshotsRule8B3CB881",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncED2A8432": Object {
      "DependsOn": Array [
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "27ff5e36ed407095f3ea8bb55c7254a951cb4eec34607b2ffbf468cea5fcc515.zip",
        },
        "Description": "Delete RDS snapshots.",
        "Environment": Object {
          "Variables": Object {
            "DELETE_DAYS": "7",
            "RDS_CLUSTER_NAME": Object {
              "Ref": "AuroraMysqlrdsaurora1AD58F64",
            },
            "TARGET_REGION": "ap-northeast-3",
          },
        },
        "FunctionName": "wcc-lambda-ps-stg-delete-snapshot-01",
        "Handler": "delete-snapshot.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:AddTagsToResource",
                "rds:DeleteDBClusterSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBClusterSnapshots",
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshotAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowDeleteRdsSnapshot",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDefaultPolicy4423A6E8",
        "Roles": Array [
          Object {
            "Ref": "AuroraMysqlcopySnapshotDeleteSnapshotFuncServiceRoleDFFF2B52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC": Object {
      "Properties": Object {
        "Description": "Event on create RDS backup.",
        "EventPattern": Object {
          "detail": Object {
            "EventID": Array [
              "RDS-EVENT-0075",
              "RDS-EVENT-0169",
            ],
            "SourceIdentifier": Array [
              Object {
                "prefix": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "rds:",
                      Object {
                        "Ref": "AuroraMysqlrdsaurora1AD58F64",
                      },
                    ],
                  ],
                },
              },
            ],
          },
          "detail-type": Array [
            "RDS DB Cluster Snapshot Event",
          ],
          "source": Array [
            "aws.rds",
          ],
        },
        "Name": "wcc-event-ps-stg-copy-snapshot-01",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuroraMysqlcopySnapshotEventOnCreateRdsBackupAllowEventRulestgwccappStatefullAuroraMysqlcopySnapshotCopySnapshotFunc5862E94352079510": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotCopySnapshotFunc05993CFE",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlcopySnapshotEventOnCreateRdsBackupACCF16FC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuroraMysqldbSecret3EE8ABE5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "RDS AuroraMysql user password.",
        "GenerateSecretString": Object {
          "ExcludeCharacters": "\\"%+~\`#$&()|[]{}:;<>?!'/@)*-\\\\",
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\\"username\\":\\"auroramysql\\"}",
        },
        "Name": "wcc-sm-ps-stg-aurora-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sm-ps-stg-aurora-01",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMysqldbSecretAttachment17C2F2B2": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraMysqldbSecret3EE8ABE5",
        },
        "TargetId": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMysqlerrorLogSubscriptionFilterDDECEAB5": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSourceStream731398D4",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "errorLogBackupSubscriptionFilterRole581B648A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlgeneralLogSubscriptionFilterA822B9D4": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSourceStreamC7156042",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "generalLogBackupSubscriptionFilterRoleE58546A9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AuroraMysqlrdsaurora1AD58F64": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "wcc-aurora-ps-stg-cluster-01",
        "DBClusterParameterGroupName": Object {
          "Ref": "AuroraMysqlrdsparameterGrpC9897E1B",
        },
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "DatabaseName": "rsltproc",
        "DeletionProtection": true,
        "EnableCloudwatchLogsExports": Array [
          "error",
          "general",
          "slowquery",
          "audit",
        ],
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.02.1",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraMysqldbSecret3EE8ABE5",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 3306,
        "PreferredBackupWindow": "16:00-16:30",
        "PreferredMaintenanceWindow": "Sat:15:00-Sat:15:30",
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-aurora-ps-stg-cluster-01",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraMysqlsgrdsaurora89D6CFEC",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance1FB2FA22C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-stg-instance-01-1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraInstance217DBA6B3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMysqlrdsaurora1AD58F64",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "wcc-aurora-ps-stg-instance-01-2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMysqlrdssubnetgrpD5955B6A",
        },
        "Engine": "aurora-mysql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
            "Arn",
          ],
        },
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraMysqlrdsauroraLogRetentionaudit240213FA": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/audit",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/error",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/general",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RetentionInDays": 365,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraMysqlrdsauroraMonitoringRole062D4CDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraMysqlrdsparameterGrpC9897E1B": Object {
      "Properties": Object {
        "Description": "wcc-parametergrp-ps-stg-aurora-01",
        "Family": "aurora-mysql8.0",
        "Parameters": Object {
          "character_set_client": "utf8mb4",
          "character_set_connection": "utf8mb4",
          "character_set_database": "utf8mb4",
          "character_set_results": "utf8mb4",
          "character_set_server": "utf8mb4",
          "collation_connection": "utf8mb4_bin",
          "collation_server": "utf8mb4_bin",
          "general_log": "1",
          "server_audit_events": "CONNECT,QUERY,TABLE",
          "server_audit_logging": "1",
          "server_audit_logs_upload": "1",
          "slow_query_log": "1",
          "time_zone": "Asia/Tokyo",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-parametergrp-ps-stg-aurora-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraMysqlrdssubnetgrpD5955B6A": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "wcc-subnetgrp-ps-stg-private-01",
        "DBSubnetGroupName": "wcc-subnetgrp-ps-stg-private-01",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
          },
          Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnetgrp-ps-stg-private-01",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMysqlsgrdsaurora89D6CFEC": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-appStatefull/AuroraMysql/sg-rds-aurora",
        "GroupName": "wcc-sg-ps-stg-aurora-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.150.1.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
          Object {
            "CidrIp": "10.150.101.0/24",
            "Description": "allow MySql port access.",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-aurora-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraMysqlslowqueryLogSubscriptionFilter0E58A533": Object {
      "DependsOn": Array [
        "AuroraMysqlrdsauroraInstance1FB2FA22C",
        "AuroraMysqlrdsauroraInstance217DBA6B3",
        "AuroraMysqlrdsauroraLogRetentionaudit240213FA",
        "AuroraMysqlrdsauroraLogRetentionerrorE99DC5FB",
        "AuroraMysqlrdsauroraLogRetentiongeneral8F547AD8",
        "AuroraMysqlrdsauroraLogRetentionslowquery7DFEEBDD",
        "AuroraMysqlrdsauroraMonitoringRole062D4CDD",
        "AuroraMysqlrdsaurora1AD58F64",
        "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSourceStreamE5A932D7",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "AuroraMysqlrdsaurora1AD58F64",
              },
              "/slowquery",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
  response_status = \\"SUCCESS\\"
  error_message = \\"\\"
  try:
    props = event[\\"ResourceProperties\\"]
    bucket = props[\\"BucketName\\"]
    notification_configuration = props[\\"NotificationConfiguration\\"]
    request_type = event[\\"RequestType\\"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception(\\"Failed to put bucket notification configuration\\")
    response_status = \\"FAILED\\"
    error_message = f\\"Error: {str(e)}. \\"
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      \\"Status\\": response_status,
      \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
      \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
      \\"StackId\\": event[\\"StackId\\"],
      \\"RequestId\\": event[\\"RequestId\\"],
      \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
      \\"NoEcho\\": False,
    }
  ).encode(\\"utf-8\\")
  headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode(\\"utf-8\\"))
    print(\\"Status code: \\" + response.reason)
  except Exception as e:
      print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CwlBackupS3s3BucketCB9FD1EB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-rds-cwl-backup-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-stg-rds-cwl-backup-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-rds-cwl-backup-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CwlBackupS3s3BucketPolicy435B5AF3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CwlBackupS3s3BucketCB9FD1EB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CwlBackupS3s3BucketCB9FD1EB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CwlBackupS3s3BucketCB9FD1EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcrRepositoryCrcbEcrRepository4A181266": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-stg-crcb-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-stg-crcb-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryLemsEcrRepository6F6AB26B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-stg-lems-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-stg-lems-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "EcrRepositoryMubEcrRepository0646994A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "EncryptionType": "KMS",
        },
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"description\\":\\"expire | imageCountMoreThan (10) | any\\",\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":10},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "wcc-ecr-ps-stg-mub-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ecr-ps-stg-mub-01",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "e45ee2082d227db1b6f0292696ce5ce2b061c105d15efb341925ca040d1feb68.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStream988E743F": Object {
      "DependsOn": Array [
        "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-rds-audit-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
            },
            "LogStreamName": Object {
              "Ref": "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-audit/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupSourceStream0F2E9FA1",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "auditLogBackupDeliveryStreamLogGroup380ADE01": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamLogGroupS3DestinationBF7C7087": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "auditLogBackupDeliveryStreamLogGroup380ADE01",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "auditLogBackupDeliveryStreamS3DestinationRole38051E8B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupDeliveryStreamLogGroup380ADE01",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy8295F5DF",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamS3DestinationRole38051E8B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupDeliveryStreamServiceRoleA3872BE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupDeliveryStreamServiceRoleDefaultPolicyA606551F",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupDeliveryStreamServiceRoleA3872BE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "auditLogBackupSourceStream0F2E9FA1": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-rds-audit-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-rds-audit-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "auditLogBackupSubscriptionFilterRole4CF1AC4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSourceStream0F2E9FA1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "auditLogBackupSubscriptionFilterRole4CF1AC4C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "auditLogBackupSubscriptionFilterRoleDefaultPolicy2BD0680E",
        "Roles": Array [
          Object {
            "Ref": "auditLogBackupSubscriptionFilterRole4CF1AC4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStream94D26D09": Object {
      "DependsOn": Array [
        "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-rds-error-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
            },
            "LogStreamName": Object {
              "Ref": "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-error/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupSourceStream731398D4",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-error-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "errorLogBackupDeliveryStreamLogGroup9EAB4ED0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamLogGroupS3DestinationA7DBE180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupDeliveryStreamLogGroup9EAB4ED0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy9863CD77",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamS3DestinationRole2882B3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupDeliveryStreamServiceRoleDefaultPolicy1669D161",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "errorLogBackupDeliveryStreamServiceRoleFE2BEB8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-error-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSourceStream731398D4": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-rds-error-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-rds-error-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "errorLogBackupSubscriptionFilterRole581B648A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSourceStream731398D4",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "errorLogBackupSubscriptionFilterRole581B648A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "errorLogBackupSubscriptionFilterRoleDefaultPolicy2B199E6B",
        "Roles": Array [
          Object {
            "Ref": "errorLogBackupSubscriptionFilterRole581B648A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStream785A07E0": Object {
      "DependsOn": Array [
        "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-rds-general-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
            },
            "LogStreamName": Object {
              "Ref": "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-general/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamS3DestinationRole39241273",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupSourceStreamC7156042",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "generalLogBackupDeliveryStreamServiceRoleF612D538",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-general-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "generalLogBackupDeliveryStreamLogGroupF29A1721": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamLogGroupS3Destination9D78067A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "generalLogBackupDeliveryStreamLogGroupF29A1721",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "generalLogBackupDeliveryStreamS3DestinationRole39241273": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupDeliveryStreamLogGroupF29A1721",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy659EB200",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamS3DestinationRole39241273",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupDeliveryStreamServiceRoleDefaultPolicy95F9B9AB",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupDeliveryStreamServiceRoleF612D538",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupDeliveryStreamServiceRoleF612D538": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-general-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generalLogBackupSourceStreamC7156042": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-rds-general-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-rds-general-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSourceStreamC7156042",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "generalLogBackupSubscriptionFilterRoleE58546A9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generalLogBackupSubscriptionFilterRoleDefaultPolicyE60DDEBF",
        "Roles": Array [
          Object {
            "Ref": "generalLogBackupSubscriptionFilterRoleE58546A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "generalLogBackupSubscriptionFilterRoleE58546A9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "s3executedcheckupresultfiless3Bucket87791383": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-executed-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-stg-executed-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-executed-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3executedcheckupresultfiless3BucketPolicy3687CC05": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3executedcheckupresultfiless3Bucket87791383",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3executedcheckupresultfiless3Bucket87791383",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3executedcheckupresultfiless3Bucket87791383",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3masterfiless3BucketA965B49C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-master-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-stg-master-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-master-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3masterfiless3BucketNotificationsD17B3C7A": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3masterfiless3BucketPolicy7398B30D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3masterfiless3BucketA965B49C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3masterfiless3BucketA965B49C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3masterfiless3BucketA965B49C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "s3uploadedcheckupresultfiless3BucketEB10AA1D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-uploaded-checkup-result-files-01",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
          },
          "LogFilePrefix": "wcc-s3-ps-stg-uploaded-checkup-result-files-01/",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-uploaded-checkup-result-files-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "s3uploadedcheckupresultfiless3BucketNotifications6E88FE28": Object {
      "Properties": Object {
        "BucketName": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "EventBridgeConfiguration": Object {},
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "s3uploadedcheckupresultfiless3BucketPolicy8A996C24": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "s3uploadedcheckupresultfiless3BucketEB10AA1D",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "s3uploadedcheckupresultfiless3BucketEB10AA1D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "slowqueryLogBackupDeliveryStreamA6BE1255": Object {
      "DependsOn": Array [
        "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
      ],
      "Properties": Object {
        "DeliveryStreamName": "wcc-deliveryStream-ps-stg-rds-slowquery-01",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CwlBackupS3s3BucketCB9FD1EB",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 900,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
            },
            "LogStreamName": Object {
              "Ref": "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9",
            },
          },
          "Prefix": Object {
            "Fn::Join": Array [
              "",
              Array [
                "aws-rds-cluster-",
                Object {
                  "Ref": "AuroraMysqlrdsaurora1AD58F64",
                },
                "-slowquery/",
              ],
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": Object {
          "KinesisStreamARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupSourceStreamE5A932D7",
              "Arn",
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
              "Arn",
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "slowqueryLogBackupDeliveryStreamLogGroup71573CA1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamLogGroupS3Destination17B18FC9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CwlBackupS3s3BucketCB9FD1EB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CwlBackupS3s3BucketCB9FD1EB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupDeliveryStreamLogGroup71573CA1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamS3DestinationRoleDefaultPolicy3F2BB29B",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamS3DestinationRole5750B27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-deliveryStream-ps-stg-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupDeliveryStreamServiceRoleDefaultPolicyA91D8EEC",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupDeliveryStreamServiceRole6DD29B36",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "slowqueryLogBackupSourceStreamE5A932D7": Object {
      "Properties": Object {
        "Name": "wcc-stream-ps-stg-rds-slowquery-01",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-stream-ps-stg-rds-slowquery-01",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSourceStreamE5A932D7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "slowqueryLogBackupSubscriptionFilterRoleDefaultPolicyE478D705",
        "Roles": Array [
          Object {
            "Ref": "slowqueryLogBackupSubscriptionFilterRoleDEA8E4C8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-stg networkStack 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefPsVpcB3B0C151B33DF0C2": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
      },
      "Value": Object {
        "Ref": "PsVpcB3B0C151",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
      },
    },
    "ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet1PrivateSubnetD6B6AC376E7E9A65",
      },
      "Value": Object {
        "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefPsVpcPublicSubnet0PublicSubnet2D08C83284F96B1D",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
      },
    },
    "ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefPsVpcPublicSubnet1PublicSubnetF4FCB026F17E1682",
      },
      "Value": Object {
        "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
      },
    },
    "ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570": Object {
      "Export": Object {
        "Name": "stg-wcc-network:ExportsOutputRefS3LogBuckets3Bucket9252A6FD51C30570",
      },
      "Value": Object {
        "Ref": "S3LogBuckets3Bucket9252A6FD",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PsVpcB3B0C151": Object {
      "Properties": Object {
        "CidrBlock": "10.150.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-vpc-ps-stg-apne1-01",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "PsVpcIgw5C685DB3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-igw-ps-stg-01",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "PsVpcIgwAtt70BBF2A3": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "PsVpcPrivateSubnet0PrivateSubnetDefaultRoute4966EBAE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet0NatGateway1C7BC65D",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet0PrivateSubnetE40A98D3": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.150.1.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-stg-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-stg-private-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet0PrivateSubnetRouteTableAssociationA4BCDB43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet0PrivateSubnetE40A98D3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.150.101.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-stg-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPrivateSubnet1PrivateSubnetDefaultRoute8B1574DC": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "PsVpcPublicSubnet1NatGateway449156E1",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-stg-private-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPrivateSubnet1PrivateSubnetRouteTableAssociationB5686E53": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPrivateSubnet1PrivateSubnetD6B6AC37",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0Eip29037005": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-stg-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet0NatGateway1C7BC65D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet0Eip29037005",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-stg-a-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet0PublicSubnet2D08C832": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.150.0.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-stg-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet0PublicSubnetDefaultRouteA06EF3AF": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableAssociationB5186F48": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet0PublicSubnet2D08C832",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-stg-public-a-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1EipB03695F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-eip-ps-stg-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "PsVpcPublicSubnet1NatGateway449156E1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "PsVpcPublicSubnet1EipB03695F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-nat-ps-stg-c-01",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "PsVpcPublicSubnet1PublicSubnetDefaultRouteE5FC4C06": Object {
      "DependsOn": Array [
        "PsVpcIgw5C685DB3",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "PsVpcIgw5C685DB3",
        },
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "PsVpcPublicSubnet1PublicSubnetF4FCB026": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.150.100.0/24",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-subnet-ps-stg-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-rtb-ps-stg-public-c-01",
          },
        ],
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "PsVpcPublicSubnet1PublicSubnetRouteTableAssociation435B1413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
        },
        "SubnetId": Object {
          "Ref": "PsVpcPublicSubnet1PublicSubnetF4FCB026",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "PsVpcS3GatewayEp039F2B29": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "PsVpcPublicSubnet0PublicSubnetRouteTableB244480B",
          },
          Object {
            "Ref": "PsVpcPublicSubnet1PublicSubnetRouteTable6BA5313F",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet0PrivateSubnetRouteTable30A55845",
          },
          Object {
            "Ref": "PsVpcPrivateSubnet1PrivateSubnetRouteTable3C5D049F",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "PsVpcB3B0C151",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "PsVpcvpcFlowLog44076D7B": Object {
      "Properties": Object {
        "LogDestination": "arn:aws:s3:::wcc-s3-ps-stg-vpcflowlog-01/wcc-s3-ps-stg-log-vpcflowlog-01/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": Object {
          "Ref": "PsVpcB3B0C151",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-log-vpcflowlog-01",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "S3LogBuckets3Bucket9252A6FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "wcc-s3-ps-stg-s3-accesslog-01",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 7,
              "Id": "wcc-lifecycle-ps-stg-accesslog-01",
              "NoncurrentVersionExpiration": Object {
                "NoncurrentDays": 7,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-s3-ps-stg-s3-accesslog-01",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "S3LogBuckets3BucketPolicyDB375CE9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "S3LogBuckets3Bucket9252A6FD",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "S3LogBuckets3Bucket9252A6FD",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "S3LogBuckets3Bucket9252A6FD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectTagging",
                "s3:GetObjectTagging",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-source-01",
                  "arn:aws:iam::876500247557:role/wcc-role-ps-stg-datasync-target-01",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "S3LogBuckets3Bucket9252A6FD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::876500247557:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3LogBuckets3Bucket9252A6FD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot-test-stg opsStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "ec2bastionAAEED1EE": Object {
      "DependsOn": Array [
        "roleec2bastionFAACD82E",
      ],
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "Iops": 3000,
              "VolumeSize": 8,
              "VolumeType": "gp3",
            },
          },
        ],
        "DisableApiTermination": true,
        "IamInstanceProfile": Object {
          "Ref": "ec2bastionInstanceProfile4EB81733",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "sgec2bastionE0536592",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcPrivateSubnet0PrivateSubnetE40A98D30D9DAA90",
        },
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-ec2-ps-stg-bastion-01",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
hostnamectl set-hostname wcc-ec2-ps-stg-bastion-01
echo \\"preserve_hostname: true\\" >> /etc/cloud/cloud.cfg
timedatectl set-timezone Asia/Tokyo
yum update -y",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ec2bastionInstanceProfile4EB81733": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "roleec2bastionFAACD82E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "roleec2bastionFAACD82E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "bastion ec2 role",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "RoleName": "wcc-role-ps-stg-bastion-01",
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-role-ps-stg-bastion-01",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sgec2bastionE0536592": Object {
      "Properties": Object {
        "GroupDescription": "stg-wcc-ops/sg-ec2-bastion",
        "GroupName": "wcc-sg-ps-stg-bastion-01",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CTC_Bill02_System",
            "Value": "ps-stg",
          },
          Object {
            "Key": "Name",
            "Value": "wcc-sg-ps-stg-bastion-01",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "stg-wcc-network:ExportsOutputRefPsVpcB3B0C151B33DF0C2",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
